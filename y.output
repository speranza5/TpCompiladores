Terminals unused in grammar

   PALABRA
   COMILLA


State 44 conflicts: 7 reduce/reduce


Grammar

    0 $accept: programa $end

    1 $@1: /* empty */

    2 programa: $@1 declaracion algoritmo

    3 $@2: /* empty */

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF

    5 declaraciones_variables: declaraciones_variables declaracion_variable
    6                        | declaracion_variable

    7 declaracion_variable: ENTERO DOS_PUNTOS variables
    8                     | REAL DOS_PUNTOS variables
    9                     | STRING DOS_PUNTOS variables

   10 variables: ID
   11          | ID PUNTO_COMA variables

   12 $@3: /* empty */

   13 algoritmo: $@3 INICIO bloque FIN

   14 bloque: sentencia
   15       | bloque sentencia

   16 sentencia: asignacion
   17          | decision
   18          | repeticion
   19          | between

   20 asignacion: ID OP_ASIG ID
   21           | ID OP_ASIG operacion
   22           | ID OP_ASIG CONSTSTRING
   23           | LET lista_let OP_ASIG P_A tupla P_C

   24 lista_let: ID
   25          | ID COMA lista_let

   26 tupla: operacion
   27      | operacion PUNTO_COMA tupla

   28 operacion: operacion OP_SUMA termino
   29          | operacion OP_RESTA termino
   30          | termino

   31 termino: termino OP_MUL factor
   32        | termino OP_DIV factor
   33        | factor

   34 factor: ID
   35       | CONSTINT
   36       | CONSTREAL
   37       | P_A operacion P_C

   38 decision: IF P_A condicion P_C LL_A bloque LL_C
   39         | IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

   40 condicion: comparacion
   41          | comparacion OP_AND comparacion
   42          | comparacion OP_OR comparacion
   43          | OP_NOT comparacion

   44 comparacion: factor OP_COMPARACION factor

   45 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C

   46 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10 11 20 21 22 24 25 34 46
CONSTINT (259) 35
CONSTREAL (260) 36
CONSTSTRING (261) 22
ENTERO (262) 7
STRING (263) 9
REAL (264) 8
PUNTO_COMA (265) 11 27 46
COMA (266) 25 46
DOS_PUNTOS (267) 7 8 9
ENDEF (268) 4
DEFVAR (269) 4
PALABRA (270)
COMILLA (271)
OP_ASIG (272) 20 21 22 23
INICIO (273) 13
FIN (274) 13
P_A (275) 23 37 38 39 45 46
P_C (276) 23 37 38 39 45 46
OP_SUMA (277) 28
OP_RESTA (278) 29
OP_MUL (279) 31
OP_DIV (280) 32
IF (281) 38 39
ELSE (282) 39
LL_A (283) 38 39 45
LL_C (284) 38 39 45
OP_COMPARACION (285) 44
OP_AND (286) 41
OP_OR (287) 42
OP_NOT (288) 43
WHILE (289) 45
BETWEEN (290) 46
COR_A (291) 46
COR_C (292) 46
LET (293) 23


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
programa (40)
    on left: 2, on right: 0
$@1 (41)
    on left: 1, on right: 2
declaracion (42)
    on left: 4, on right: 2
$@2 (43)
    on left: 3, on right: 4
declaraciones_variables (44)
    on left: 5 6, on right: 4 5
declaracion_variable (45)
    on left: 7 8 9, on right: 5 6
variables (46)
    on left: 10 11, on right: 7 8 9 11
algoritmo (47)
    on left: 13, on right: 2
$@3 (48)
    on left: 12, on right: 13
bloque (49)
    on left: 14 15, on right: 13 15 38 39 45
sentencia (50)
    on left: 16 17 18 19, on right: 14 15
asignacion (51)
    on left: 20 21 22 23, on right: 16
lista_let (52)
    on left: 24 25, on right: 23 25
tupla (53)
    on left: 26 27, on right: 23 27
operacion (54)
    on left: 28 29 30, on right: 21 26 27 28 29 37 46
termino (55)
    on left: 31 32 33, on right: 28 29 30 31 32
factor (56)
    on left: 34 35 36 37, on right: 31 32 33 44
decision (57)
    on left: 38 39, on right: 17
condicion (58)
    on left: 40 41 42 43, on right: 38 39 45
comparacion (59)
    on left: 44, on right: 40 41 42 43
repeticion (60)
    on left: 45, on right: 18
between (61)
    on left: 46, on right: 19


state 0

    0 $accept: . programa $end

    $default  reduce using rule 1 ($@1)

    programa  go to state 1
    $@1       go to state 2


state 1

    0 $accept: programa . $end

    $end  shift, and go to state 3


state 2

    2 programa: $@1 . declaracion algoritmo

    DEFVAR  shift, and go to state 4

    declaracion  go to state 5


state 3

    0 $accept: programa $end .

    $default  accept


state 4

    4 declaracion: DEFVAR . $@2 declaraciones_variables ENDEF

    $default  reduce using rule 3 ($@2)

    $@2  go to state 6


state 5

    2 programa: $@1 declaracion . algoritmo

    $default  reduce using rule 12 ($@3)

    algoritmo  go to state 7
    $@3        go to state 8


state 6

    4 declaracion: DEFVAR $@2 . declaraciones_variables ENDEF

    ENTERO  shift, and go to state 9
    STRING  shift, and go to state 10
    REAL    shift, and go to state 11

    declaraciones_variables  go to state 12
    declaracion_variable     go to state 13


state 7

    2 programa: $@1 declaracion algoritmo .

    $default  reduce using rule 2 (programa)


state 8

   13 algoritmo: $@3 . INICIO bloque FIN

    INICIO  shift, and go to state 14


state 9

    7 declaracion_variable: ENTERO . DOS_PUNTOS variables

    DOS_PUNTOS  shift, and go to state 15


state 10

    9 declaracion_variable: STRING . DOS_PUNTOS variables

    DOS_PUNTOS  shift, and go to state 16


state 11

    8 declaracion_variable: REAL . DOS_PUNTOS variables

    DOS_PUNTOS  shift, and go to state 17


state 12

    4 declaracion: DEFVAR $@2 declaraciones_variables . ENDEF
    5 declaraciones_variables: declaraciones_variables . declaracion_variable

    ENTERO  shift, and go to state 9
    STRING  shift, and go to state 10
    REAL    shift, and go to state 11
    ENDEF   shift, and go to state 18

    declaracion_variable  go to state 19


state 13

    6 declaraciones_variables: declaracion_variable .

    $default  reduce using rule 6 (declaraciones_variables)


state 14

   13 algoritmo: $@3 INICIO . bloque FIN

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    bloque      go to state 25
    sentencia   go to state 26
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 15

    7 declaracion_variable: ENTERO DOS_PUNTOS . variables

    ID  shift, and go to state 31

    variables  go to state 32


state 16

    9 declaracion_variable: STRING DOS_PUNTOS . variables

    ID  shift, and go to state 31

    variables  go to state 33


state 17

    8 declaracion_variable: REAL DOS_PUNTOS . variables

    ID  shift, and go to state 31

    variables  go to state 34


state 18

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF .

    $default  reduce using rule 4 (declaracion)


state 19

    5 declaraciones_variables: declaraciones_variables declaracion_variable .

    $default  reduce using rule 5 (declaraciones_variables)


state 20

   20 asignacion: ID . OP_ASIG ID
   21           | ID . OP_ASIG operacion
   22           | ID . OP_ASIG CONSTSTRING

    OP_ASIG  shift, and go to state 35


state 21

   38 decision: IF . P_A condicion P_C LL_A bloque LL_C
   39         | IF . P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_A  shift, and go to state 36


state 22

   45 repeticion: WHILE . P_A condicion P_C LL_A bloque LL_C

    P_A  shift, and go to state 37


state 23

   46 between: BETWEEN . P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    P_A  shift, and go to state 38


state 24

   23 asignacion: LET . lista_let OP_ASIG P_A tupla P_C

    ID  shift, and go to state 39

    lista_let  go to state 40


state 25

   13 algoritmo: $@3 INICIO bloque . FIN
   15 bloque: bloque . sentencia

    ID       shift, and go to state 20
    FIN      shift, and go to state 41
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    sentencia   go to state 42
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 26

   14 bloque: sentencia .

    $default  reduce using rule 14 (bloque)


state 27

   16 sentencia: asignacion .

    $default  reduce using rule 16 (sentencia)


state 28

   17 sentencia: decision .

    $default  reduce using rule 17 (sentencia)


state 29

   18 sentencia: repeticion .

    $default  reduce using rule 18 (sentencia)


state 30

   19 sentencia: between .

    $default  reduce using rule 19 (sentencia)


state 31

   10 variables: ID .
   11          | ID . PUNTO_COMA variables

    PUNTO_COMA  shift, and go to state 43

    $default  reduce using rule 10 (variables)


state 32

    7 declaracion_variable: ENTERO DOS_PUNTOS variables .

    $default  reduce using rule 7 (declaracion_variable)


state 33

    9 declaracion_variable: STRING DOS_PUNTOS variables .

    $default  reduce using rule 9 (declaracion_variable)


state 34

    8 declaracion_variable: REAL DOS_PUNTOS variables .

    $default  reduce using rule 8 (declaracion_variable)


state 35

   20 asignacion: ID OP_ASIG . ID
   21           | ID OP_ASIG . operacion
   22           | ID OP_ASIG . CONSTSTRING

    ID           shift, and go to state 44
    CONSTINT     shift, and go to state 45
    CONSTREAL    shift, and go to state 46
    CONSTSTRING  shift, and go to state 47
    P_A          shift, and go to state 48

    operacion  go to state 49
    termino    go to state 50
    factor     go to state 51


state 36

   38 decision: IF P_A . condicion P_C LL_A bloque LL_C
   39         | IF P_A . condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48
    OP_NOT     shift, and go to state 53

    factor       go to state 54
    condicion    go to state 55
    comparacion  go to state 56


state 37

   45 repeticion: WHILE P_A . condicion P_C LL_A bloque LL_C

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48
    OP_NOT     shift, and go to state 53

    factor       go to state 54
    condicion    go to state 57
    comparacion  go to state 56


state 38

   46 between: BETWEEN P_A . ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    ID  shift, and go to state 58


state 39

   24 lista_let: ID .
   25          | ID . COMA lista_let

    COMA  shift, and go to state 59

    $default  reduce using rule 24 (lista_let)


state 40

   23 asignacion: LET lista_let . OP_ASIG P_A tupla P_C

    OP_ASIG  shift, and go to state 60


state 41

   13 algoritmo: $@3 INICIO bloque FIN .

    $default  reduce using rule 13 (algoritmo)


state 42

   15 bloque: bloque sentencia .

    $default  reduce using rule 15 (bloque)


state 43

   11 variables: ID PUNTO_COMA . variables

    ID  shift, and go to state 31

    variables  go to state 61


state 44

   20 asignacion: ID OP_ASIG ID .
   34 factor: ID .

    ID        reduce using rule 20 (asignacion)
    ID        [reduce using rule 34 (factor)]
    FIN       reduce using rule 20 (asignacion)
    FIN       [reduce using rule 34 (factor)]
    OP_SUMA   reduce using rule 34 (factor)
    OP_RESTA  reduce using rule 34 (factor)
    OP_MUL    reduce using rule 34 (factor)
    OP_DIV    reduce using rule 34 (factor)
    IF        reduce using rule 20 (asignacion)
    IF        [reduce using rule 34 (factor)]
    LL_C      reduce using rule 20 (asignacion)
    LL_C      [reduce using rule 34 (factor)]
    WHILE     reduce using rule 20 (asignacion)
    WHILE     [reduce using rule 34 (factor)]
    BETWEEN   reduce using rule 20 (asignacion)
    BETWEEN   [reduce using rule 34 (factor)]
    LET       reduce using rule 20 (asignacion)
    LET       [reduce using rule 34 (factor)]
    $default  reduce using rule 20 (asignacion)


state 45

   35 factor: CONSTINT .

    $default  reduce using rule 35 (factor)


state 46

   36 factor: CONSTREAL .

    $default  reduce using rule 36 (factor)


state 47

   22 asignacion: ID OP_ASIG CONSTSTRING .

    $default  reduce using rule 22 (asignacion)


state 48

   37 factor: P_A . operacion P_C

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    operacion  go to state 62
    termino    go to state 50
    factor     go to state 51


state 49

   21 asignacion: ID OP_ASIG operacion .
   28 operacion: operacion . OP_SUMA termino
   29          | operacion . OP_RESTA termino

    OP_SUMA   shift, and go to state 63
    OP_RESTA  shift, and go to state 64

    $default  reduce using rule 21 (asignacion)


state 50

   30 operacion: termino .
   31 termino: termino . OP_MUL factor
   32        | termino . OP_DIV factor

    OP_MUL  shift, and go to state 65
    OP_DIV  shift, and go to state 66

    $default  reduce using rule 30 (operacion)


state 51

   33 termino: factor .

    $default  reduce using rule 33 (termino)


state 52

   34 factor: ID .

    $default  reduce using rule 34 (factor)


state 53

   43 condicion: OP_NOT . comparacion

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    factor       go to state 54
    comparacion  go to state 67


state 54

   44 comparacion: factor . OP_COMPARACION factor

    OP_COMPARACION  shift, and go to state 68


state 55

   38 decision: IF P_A condicion . P_C LL_A bloque LL_C
   39         | IF P_A condicion . P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_C  shift, and go to state 69


state 56

   40 condicion: comparacion .
   41          | comparacion . OP_AND comparacion
   42          | comparacion . OP_OR comparacion

    OP_AND  shift, and go to state 70
    OP_OR   shift, and go to state 71

    $default  reduce using rule 40 (condicion)


state 57

   45 repeticion: WHILE P_A condicion . P_C LL_A bloque LL_C

    P_C  shift, and go to state 72


state 58

   46 between: BETWEEN P_A ID . COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    COMA  shift, and go to state 73


state 59

   25 lista_let: ID COMA . lista_let

    ID  shift, and go to state 39

    lista_let  go to state 74


state 60

   23 asignacion: LET lista_let OP_ASIG . P_A tupla P_C

    P_A  shift, and go to state 75


state 61

   11 variables: ID PUNTO_COMA variables .

    $default  reduce using rule 11 (variables)


state 62

   28 operacion: operacion . OP_SUMA termino
   29          | operacion . OP_RESTA termino
   37 factor: P_A operacion . P_C

    P_C       shift, and go to state 76
    OP_SUMA   shift, and go to state 63
    OP_RESTA  shift, and go to state 64


state 63

   28 operacion: operacion OP_SUMA . termino

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    termino  go to state 77
    factor   go to state 51


state 64

   29 operacion: operacion OP_RESTA . termino

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    termino  go to state 78
    factor   go to state 51


state 65

   31 termino: termino OP_MUL . factor

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    factor  go to state 79


state 66

   32 termino: termino OP_DIV . factor

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    factor  go to state 80


state 67

   43 condicion: OP_NOT comparacion .

    $default  reduce using rule 43 (condicion)


state 68

   44 comparacion: factor OP_COMPARACION . factor

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    factor  go to state 81


state 69

   38 decision: IF P_A condicion P_C . LL_A bloque LL_C
   39         | IF P_A condicion P_C . LL_A bloque LL_C ELSE LL_A bloque LL_C

    LL_A  shift, and go to state 82


state 70

   41 condicion: comparacion OP_AND . comparacion

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    factor       go to state 54
    comparacion  go to state 83


state 71

   42 condicion: comparacion OP_OR . comparacion

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    factor       go to state 54
    comparacion  go to state 84


state 72

   45 repeticion: WHILE P_A condicion P_C . LL_A bloque LL_C

    LL_A  shift, and go to state 85


state 73

   46 between: BETWEEN P_A ID COMA . COR_A operacion PUNTO_COMA operacion COR_C P_C

    COR_A  shift, and go to state 86


state 74

   25 lista_let: ID COMA lista_let .

    $default  reduce using rule 25 (lista_let)


state 75

   23 asignacion: LET lista_let OP_ASIG P_A . tupla P_C

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    tupla      go to state 87
    operacion  go to state 88
    termino    go to state 50
    factor     go to state 51


state 76

   37 factor: P_A operacion P_C .

    $default  reduce using rule 37 (factor)


state 77

   28 operacion: operacion OP_SUMA termino .
   31 termino: termino . OP_MUL factor
   32        | termino . OP_DIV factor

    OP_MUL  shift, and go to state 65
    OP_DIV  shift, and go to state 66

    $default  reduce using rule 28 (operacion)


state 78

   29 operacion: operacion OP_RESTA termino .
   31 termino: termino . OP_MUL factor
   32        | termino . OP_DIV factor

    OP_MUL  shift, and go to state 65
    OP_DIV  shift, and go to state 66

    $default  reduce using rule 29 (operacion)


state 79

   31 termino: termino OP_MUL factor .

    $default  reduce using rule 31 (termino)


state 80

   32 termino: termino OP_DIV factor .

    $default  reduce using rule 32 (termino)


state 81

   44 comparacion: factor OP_COMPARACION factor .

    $default  reduce using rule 44 (comparacion)


state 82

   38 decision: IF P_A condicion P_C LL_A . bloque LL_C
   39         | IF P_A condicion P_C LL_A . bloque LL_C ELSE LL_A bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    bloque      go to state 89
    sentencia   go to state 26
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 83

   41 condicion: comparacion OP_AND comparacion .

    $default  reduce using rule 41 (condicion)


state 84

   42 condicion: comparacion OP_OR comparacion .

    $default  reduce using rule 42 (condicion)


state 85

   45 repeticion: WHILE P_A condicion P_C LL_A . bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    bloque      go to state 90
    sentencia   go to state 26
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 86

   46 between: BETWEEN P_A ID COMA COR_A . operacion PUNTO_COMA operacion COR_C P_C

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    operacion  go to state 91
    termino    go to state 50
    factor     go to state 51


state 87

   23 asignacion: LET lista_let OP_ASIG P_A tupla . P_C

    P_C  shift, and go to state 92


state 88

   26 tupla: operacion .
   27      | operacion . PUNTO_COMA tupla
   28 operacion: operacion . OP_SUMA termino
   29          | operacion . OP_RESTA termino

    PUNTO_COMA  shift, and go to state 93
    OP_SUMA     shift, and go to state 63
    OP_RESTA    shift, and go to state 64

    $default  reduce using rule 26 (tupla)


state 89

   15 bloque: bloque . sentencia
   38 decision: IF P_A condicion P_C LL_A bloque . LL_C
   39         | IF P_A condicion P_C LL_A bloque . LL_C ELSE LL_A bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    LL_C     shift, and go to state 94
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    sentencia   go to state 42
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 90

   15 bloque: bloque . sentencia
   45 repeticion: WHILE P_A condicion P_C LL_A bloque . LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    LL_C     shift, and go to state 95
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    sentencia   go to state 42
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 91

   28 operacion: operacion . OP_SUMA termino
   29          | operacion . OP_RESTA termino
   46 between: BETWEEN P_A ID COMA COR_A operacion . PUNTO_COMA operacion COR_C P_C

    PUNTO_COMA  shift, and go to state 96
    OP_SUMA     shift, and go to state 63
    OP_RESTA    shift, and go to state 64


state 92

   23 asignacion: LET lista_let OP_ASIG P_A tupla P_C .

    $default  reduce using rule 23 (asignacion)


state 93

   27 tupla: operacion PUNTO_COMA . tupla

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    tupla      go to state 97
    operacion  go to state 88
    termino    go to state 50
    factor     go to state 51


state 94

   38 decision: IF P_A condicion P_C LL_A bloque LL_C .
   39         | IF P_A condicion P_C LL_A bloque LL_C . ELSE LL_A bloque LL_C

    ELSE  shift, and go to state 98

    $default  reduce using rule 38 (decision)


state 95

   45 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C .

    $default  reduce using rule 45 (repeticion)


state 96

   46 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA . operacion COR_C P_C

    ID         shift, and go to state 52
    CONSTINT   shift, and go to state 45
    CONSTREAL  shift, and go to state 46
    P_A        shift, and go to state 48

    operacion  go to state 99
    termino    go to state 50
    factor     go to state 51


state 97

   27 tupla: operacion PUNTO_COMA tupla .

    $default  reduce using rule 27 (tupla)


state 98

   39 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE . LL_A bloque LL_C

    LL_A  shift, and go to state 100


state 99

   28 operacion: operacion . OP_SUMA termino
   29          | operacion . OP_RESTA termino
   46 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion . COR_C P_C

    OP_SUMA   shift, and go to state 63
    OP_RESTA  shift, and go to state 64
    COR_C     shift, and go to state 101


state 100

   39 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A . bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    bloque      go to state 102
    sentencia   go to state 26
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 101

   46 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C . P_C

    P_C  shift, and go to state 103


state 102

   15 bloque: bloque . sentencia
   39 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque . LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    LL_C     shift, and go to state 104
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    sentencia   go to state 42
    asignacion  go to state 27
    decision    go to state 28
    repeticion  go to state 29
    between     go to state 30


state 103

   46 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C .

    $default  reduce using rule 46 (between)


state 104

   39 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C .

    $default  reduce using rule 39 (decision)
