Terminals unused in grammar

   PALABRA
   COMILLA


State 14 conflicts: 5 shift/reduce
State 25 conflicts: 6 shift/reduce
State 45 conflicts: 7 reduce/reduce
State 84 conflicts: 5 shift/reduce
State 87 conflicts: 5 shift/reduce
State 91 conflicts: 6 shift/reduce
State 92 conflicts: 6 shift/reduce
State 102 conflicts: 5 shift/reduce
State 104 conflicts: 6 shift/reduce


Grammar

    0 $accept: programa $end

    1 $@1: /* empty */

    2 programa: $@1 declaracion algoritmo

    3 $@2: /* empty */

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF

    5 declaraciones_variables: declaraciones_variables declaracion_variable
    6                        | declaracion_variable

    7 declaracion_variable: ENTERO DOS_PUNTOS variables
    8                     | REAL DOS_PUNTOS variables
    9                     | STRING DOS_PUNTOS variables

   10 variables: ID
   11          | ID PUNTO_COMA variables

   12 $@3: /* empty */

   13 algoritmo: $@3 INICIO bloque FIN

   14 bloque: sentencia
   15       | bloque sentencia

   16 sentencia: asignacion
   17          | decision
   18          | repeticion
   19          | between
   20          | asignacionlet

   21 asignacion: ID OP_ASIG ID
   22           | ID OP_ASIG operacion
   23           | ID OP_ASIG CONSTSTRING
   24           | /* empty */

   25 operacion: operacion OP_SUMA termino
   26          | operacion OP_RESTA termino
   27          | termino

   28 termino: termino OP_MUL factor
   29        | termino OP_DIV factor
   30        | factor

   31 factor: ID
   32       | CONSTINT
   33       | CONSTREAL
   34       | P_A operacion P_C

   35 decision: IF P_A condicion P_C LL_A bloque LL_C
   36         | IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

   37 condicion: comparacion
   38          | comparacion OP_AND comparacion
   39          | comparacion OP_OR comparacion
   40          | OP_NOT comparacion

   41 comparacion: factor OP_COMPARACION factor

   42 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C

   43 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

   44 asignacionlet: LET lista_var OP_IGUAL tupla

   45 tupla: P_A lista_valores P_C

   46 lista_var: ID
   47          | ID COMA lista_var

   48 lista_valores: operacion
   49              | operacion PUNTO_COMA lista_valores


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 10 11 21 22 23 31 43 46 47
CONSTINT (259) 32
CONSTREAL (260) 33
CONSTSTRING (261) 23
ENTERO (262) 7
STRING (263) 9
REAL (264) 8
PUNTO_COMA (265) 11 43 49
COMA (266) 43 47
DOS_PUNTOS (267) 7 8 9
ENDEF (268) 4
DEFVAR (269) 4
PALABRA (270)
COMILLA (271)
OP_ASIG (272) 21 22 23
INICIO (273) 13
FIN (274) 13
P_A (275) 34 35 36 42 43 45
P_C (276) 34 35 36 42 43 45
OP_SUMA (277) 25
OP_RESTA (278) 26
OP_MUL (279) 28
OP_DIV (280) 29
IF (281) 35 36
ELSE (282) 36
LL_A (283) 35 36 42
LL_C (284) 35 36 42
OP_COMPARACION (285) 41
OP_AND (286) 38
OP_OR (287) 39
OP_NOT (288) 40
WHILE (289) 42
BETWEEN (290) 43
COR_A (291) 43
COR_C (292) 43
LET (293) 44
OP_IGUAL (294) 44


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
programa (41)
    on left: 2, on right: 0
$@1 (42)
    on left: 1, on right: 2
declaracion (43)
    on left: 4, on right: 2
$@2 (44)
    on left: 3, on right: 4
declaraciones_variables (45)
    on left: 5 6, on right: 4 5
declaracion_variable (46)
    on left: 7 8 9, on right: 5 6
variables (47)
    on left: 10 11, on right: 7 8 9 11
algoritmo (48)
    on left: 13, on right: 2
$@3 (49)
    on left: 12, on right: 13
bloque (50)
    on left: 14 15, on right: 13 15 35 36 42
sentencia (51)
    on left: 16 17 18 19 20, on right: 14 15
asignacion (52)
    on left: 21 22 23 24, on right: 16
operacion (53)
    on left: 25 26 27, on right: 22 25 26 34 43 48 49
termino (54)
    on left: 28 29 30, on right: 25 26 27 28 29
factor (55)
    on left: 31 32 33 34, on right: 28 29 30 41
decision (56)
    on left: 35 36, on right: 17
condicion (57)
    on left: 37 38 39 40, on right: 35 36 42
comparacion (58)
    on left: 41, on right: 37 38 39 40
repeticion (59)
    on left: 42, on right: 18
between (60)
    on left: 43, on right: 19
asignacionlet (61)
    on left: 44, on right: 20
tupla (62)
    on left: 45, on right: 44
lista_var (63)
    on left: 46 47, on right: 44 47
lista_valores (64)
    on left: 48 49, on right: 45 49


state 0

    0 $accept: . programa $end

    $default  reduce using rule 1 ($@1)

    programa  go to state 1
    $@1       go to state 2


state 1

    0 $accept: programa . $end

    $end  shift, and go to state 3


state 2

    2 programa: $@1 . declaracion algoritmo

    DEFVAR  shift, and go to state 4

    declaracion  go to state 5


state 3

    0 $accept: programa $end .

    $default  accept


state 4

    4 declaracion: DEFVAR . $@2 declaraciones_variables ENDEF

    $default  reduce using rule 3 ($@2)

    $@2  go to state 6


state 5

    2 programa: $@1 declaracion . algoritmo

    $default  reduce using rule 12 ($@3)

    algoritmo  go to state 7
    $@3        go to state 8


state 6

    4 declaracion: DEFVAR $@2 . declaraciones_variables ENDEF

    ENTERO  shift, and go to state 9
    STRING  shift, and go to state 10
    REAL    shift, and go to state 11

    declaraciones_variables  go to state 12
    declaracion_variable     go to state 13


state 7

    2 programa: $@1 declaracion algoritmo .

    $default  reduce using rule 2 (programa)


state 8

   13 algoritmo: $@3 . INICIO bloque FIN

    INICIO  shift, and go to state 14


state 9

    7 declaracion_variable: ENTERO . DOS_PUNTOS variables

    DOS_PUNTOS  shift, and go to state 15


state 10

    9 declaracion_variable: STRING . DOS_PUNTOS variables

    DOS_PUNTOS  shift, and go to state 16


state 11

    8 declaracion_variable: REAL . DOS_PUNTOS variables

    DOS_PUNTOS  shift, and go to state 17


state 12

    4 declaracion: DEFVAR $@2 declaraciones_variables . ENDEF
    5 declaraciones_variables: declaraciones_variables . declaracion_variable

    ENTERO  shift, and go to state 9
    STRING  shift, and go to state 10
    REAL    shift, and go to state 11
    ENDEF   shift, and go to state 18

    declaracion_variable  go to state 19


state 13

    6 declaraciones_variables: declaracion_variable .

    $default  reduce using rule 6 (declaraciones_variables)


state 14

   13 algoritmo: $@3 INICIO . bloque FIN

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID        [reduce using rule 24 (asignacion)]
    IF        [reduce using rule 24 (asignacion)]
    WHILE     [reduce using rule 24 (asignacion)]
    BETWEEN   [reduce using rule 24 (asignacion)]
    LET       [reduce using rule 24 (asignacion)]
    $default  reduce using rule 24 (asignacion)

    bloque         go to state 25
    sentencia      go to state 26
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 15

    7 declaracion_variable: ENTERO DOS_PUNTOS . variables

    ID  shift, and go to state 32

    variables  go to state 33


state 16

    9 declaracion_variable: STRING DOS_PUNTOS . variables

    ID  shift, and go to state 32

    variables  go to state 34


state 17

    8 declaracion_variable: REAL DOS_PUNTOS . variables

    ID  shift, and go to state 32

    variables  go to state 35


state 18

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF .

    $default  reduce using rule 4 (declaracion)


state 19

    5 declaraciones_variables: declaraciones_variables declaracion_variable .

    $default  reduce using rule 5 (declaraciones_variables)


state 20

   21 asignacion: ID . OP_ASIG ID
   22           | ID . OP_ASIG operacion
   23           | ID . OP_ASIG CONSTSTRING

    OP_ASIG  shift, and go to state 36


state 21

   35 decision: IF . P_A condicion P_C LL_A bloque LL_C
   36         | IF . P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_A  shift, and go to state 37


state 22

   42 repeticion: WHILE . P_A condicion P_C LL_A bloque LL_C

    P_A  shift, and go to state 38


state 23

   43 between: BETWEEN . P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    P_A  shift, and go to state 39


state 24

   44 asignacionlet: LET . lista_var OP_IGUAL tupla

    ID  shift, and go to state 40

    lista_var  go to state 41


state 25

   13 algoritmo: $@3 INICIO bloque . FIN
   15 bloque: bloque . sentencia

    ID       shift, and go to state 20
    FIN      shift, and go to state 42
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID       [reduce using rule 24 (asignacion)]
    FIN      [reduce using rule 24 (asignacion)]
    IF       [reduce using rule 24 (asignacion)]
    WHILE    [reduce using rule 24 (asignacion)]
    BETWEEN  [reduce using rule 24 (asignacion)]
    LET      [reduce using rule 24 (asignacion)]

    sentencia      go to state 43
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 26

   14 bloque: sentencia .

    $default  reduce using rule 14 (bloque)


state 27

   16 sentencia: asignacion .

    $default  reduce using rule 16 (sentencia)


state 28

   17 sentencia: decision .

    $default  reduce using rule 17 (sentencia)


state 29

   18 sentencia: repeticion .

    $default  reduce using rule 18 (sentencia)


state 30

   19 sentencia: between .

    $default  reduce using rule 19 (sentencia)


state 31

   20 sentencia: asignacionlet .

    $default  reduce using rule 20 (sentencia)


state 32

   10 variables: ID .
   11          | ID . PUNTO_COMA variables

    PUNTO_COMA  shift, and go to state 44

    $default  reduce using rule 10 (variables)


state 33

    7 declaracion_variable: ENTERO DOS_PUNTOS variables .

    $default  reduce using rule 7 (declaracion_variable)


state 34

    9 declaracion_variable: STRING DOS_PUNTOS variables .

    $default  reduce using rule 9 (declaracion_variable)


state 35

    8 declaracion_variable: REAL DOS_PUNTOS variables .

    $default  reduce using rule 8 (declaracion_variable)


state 36

   21 asignacion: ID OP_ASIG . ID
   22           | ID OP_ASIG . operacion
   23           | ID OP_ASIG . CONSTSTRING

    ID           shift, and go to state 45
    CONSTINT     shift, and go to state 46
    CONSTREAL    shift, and go to state 47
    CONSTSTRING  shift, and go to state 48
    P_A          shift, and go to state 49

    operacion  go to state 50
    termino    go to state 51
    factor     go to state 52


state 37

   35 decision: IF P_A . condicion P_C LL_A bloque LL_C
   36         | IF P_A . condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49
    OP_NOT     shift, and go to state 54

    factor       go to state 55
    condicion    go to state 56
    comparacion  go to state 57


state 38

   42 repeticion: WHILE P_A . condicion P_C LL_A bloque LL_C

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49
    OP_NOT     shift, and go to state 54

    factor       go to state 55
    condicion    go to state 58
    comparacion  go to state 57


state 39

   43 between: BETWEEN P_A . ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    ID  shift, and go to state 59


state 40

   46 lista_var: ID .
   47          | ID . COMA lista_var

    COMA  shift, and go to state 60

    $default  reduce using rule 46 (lista_var)


state 41

   44 asignacionlet: LET lista_var . OP_IGUAL tupla

    OP_IGUAL  shift, and go to state 61


state 42

   13 algoritmo: $@3 INICIO bloque FIN .

    $default  reduce using rule 13 (algoritmo)


state 43

   15 bloque: bloque sentencia .

    $default  reduce using rule 15 (bloque)


state 44

   11 variables: ID PUNTO_COMA . variables

    ID  shift, and go to state 32

    variables  go to state 62


state 45

   21 asignacion: ID OP_ASIG ID .
   31 factor: ID .

    ID        reduce using rule 21 (asignacion)
    ID        [reduce using rule 31 (factor)]
    FIN       reduce using rule 21 (asignacion)
    FIN       [reduce using rule 31 (factor)]
    OP_SUMA   reduce using rule 31 (factor)
    OP_RESTA  reduce using rule 31 (factor)
    OP_MUL    reduce using rule 31 (factor)
    OP_DIV    reduce using rule 31 (factor)
    IF        reduce using rule 21 (asignacion)
    IF        [reduce using rule 31 (factor)]
    LL_C      reduce using rule 21 (asignacion)
    LL_C      [reduce using rule 31 (factor)]
    WHILE     reduce using rule 21 (asignacion)
    WHILE     [reduce using rule 31 (factor)]
    BETWEEN   reduce using rule 21 (asignacion)
    BETWEEN   [reduce using rule 31 (factor)]
    LET       reduce using rule 21 (asignacion)
    LET       [reduce using rule 31 (factor)]
    $default  reduce using rule 21 (asignacion)


state 46

   32 factor: CONSTINT .

    $default  reduce using rule 32 (factor)


state 47

   33 factor: CONSTREAL .

    $default  reduce using rule 33 (factor)


state 48

   23 asignacion: ID OP_ASIG CONSTSTRING .

    $default  reduce using rule 23 (asignacion)


state 49

   34 factor: P_A . operacion P_C

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    operacion  go to state 63
    termino    go to state 51
    factor     go to state 52


state 50

   22 asignacion: ID OP_ASIG operacion .
   25 operacion: operacion . OP_SUMA termino
   26          | operacion . OP_RESTA termino

    OP_SUMA   shift, and go to state 64
    OP_RESTA  shift, and go to state 65

    $default  reduce using rule 22 (asignacion)


state 51

   27 operacion: termino .
   28 termino: termino . OP_MUL factor
   29        | termino . OP_DIV factor

    OP_MUL  shift, and go to state 66
    OP_DIV  shift, and go to state 67

    $default  reduce using rule 27 (operacion)


state 52

   30 termino: factor .

    $default  reduce using rule 30 (termino)


state 53

   31 factor: ID .

    $default  reduce using rule 31 (factor)


state 54

   40 condicion: OP_NOT . comparacion

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    factor       go to state 55
    comparacion  go to state 68


state 55

   41 comparacion: factor . OP_COMPARACION factor

    OP_COMPARACION  shift, and go to state 69


state 56

   35 decision: IF P_A condicion . P_C LL_A bloque LL_C
   36         | IF P_A condicion . P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_C  shift, and go to state 70


state 57

   37 condicion: comparacion .
   38          | comparacion . OP_AND comparacion
   39          | comparacion . OP_OR comparacion

    OP_AND  shift, and go to state 71
    OP_OR   shift, and go to state 72

    $default  reduce using rule 37 (condicion)


state 58

   42 repeticion: WHILE P_A condicion . P_C LL_A bloque LL_C

    P_C  shift, and go to state 73


state 59

   43 between: BETWEEN P_A ID . COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    COMA  shift, and go to state 74


state 60

   47 lista_var: ID COMA . lista_var

    ID  shift, and go to state 40

    lista_var  go to state 75


state 61

   44 asignacionlet: LET lista_var OP_IGUAL . tupla

    P_A  shift, and go to state 76

    tupla  go to state 77


state 62

   11 variables: ID PUNTO_COMA variables .

    $default  reduce using rule 11 (variables)


state 63

   25 operacion: operacion . OP_SUMA termino
   26          | operacion . OP_RESTA termino
   34 factor: P_A operacion . P_C

    P_C       shift, and go to state 78
    OP_SUMA   shift, and go to state 64
    OP_RESTA  shift, and go to state 65


state 64

   25 operacion: operacion OP_SUMA . termino

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    termino  go to state 79
    factor   go to state 52


state 65

   26 operacion: operacion OP_RESTA . termino

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    termino  go to state 80
    factor   go to state 52


state 66

   28 termino: termino OP_MUL . factor

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    factor  go to state 81


state 67

   29 termino: termino OP_DIV . factor

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    factor  go to state 82


state 68

   40 condicion: OP_NOT comparacion .

    $default  reduce using rule 40 (condicion)


state 69

   41 comparacion: factor OP_COMPARACION . factor

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    factor  go to state 83


state 70

   35 decision: IF P_A condicion P_C . LL_A bloque LL_C
   36         | IF P_A condicion P_C . LL_A bloque LL_C ELSE LL_A bloque LL_C

    LL_A  shift, and go to state 84


state 71

   38 condicion: comparacion OP_AND . comparacion

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    factor       go to state 55
    comparacion  go to state 85


state 72

   39 condicion: comparacion OP_OR . comparacion

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    factor       go to state 55
    comparacion  go to state 86


state 73

   42 repeticion: WHILE P_A condicion P_C . LL_A bloque LL_C

    LL_A  shift, and go to state 87


state 74

   43 between: BETWEEN P_A ID COMA . COR_A operacion PUNTO_COMA operacion COR_C P_C

    COR_A  shift, and go to state 88


state 75

   47 lista_var: ID COMA lista_var .

    $default  reduce using rule 47 (lista_var)


state 76

   45 tupla: P_A . lista_valores P_C

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    operacion      go to state 89
    termino        go to state 51
    factor         go to state 52
    lista_valores  go to state 90


state 77

   44 asignacionlet: LET lista_var OP_IGUAL tupla .

    $default  reduce using rule 44 (asignacionlet)


state 78

   34 factor: P_A operacion P_C .

    $default  reduce using rule 34 (factor)


state 79

   25 operacion: operacion OP_SUMA termino .
   28 termino: termino . OP_MUL factor
   29        | termino . OP_DIV factor

    OP_MUL  shift, and go to state 66
    OP_DIV  shift, and go to state 67

    $default  reduce using rule 25 (operacion)


state 80

   26 operacion: operacion OP_RESTA termino .
   28 termino: termino . OP_MUL factor
   29        | termino . OP_DIV factor

    OP_MUL  shift, and go to state 66
    OP_DIV  shift, and go to state 67

    $default  reduce using rule 26 (operacion)


state 81

   28 termino: termino OP_MUL factor .

    $default  reduce using rule 28 (termino)


state 82

   29 termino: termino OP_DIV factor .

    $default  reduce using rule 29 (termino)


state 83

   41 comparacion: factor OP_COMPARACION factor .

    $default  reduce using rule 41 (comparacion)


state 84

   35 decision: IF P_A condicion P_C LL_A . bloque LL_C
   36         | IF P_A condicion P_C LL_A . bloque LL_C ELSE LL_A bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID        [reduce using rule 24 (asignacion)]
    IF        [reduce using rule 24 (asignacion)]
    WHILE     [reduce using rule 24 (asignacion)]
    BETWEEN   [reduce using rule 24 (asignacion)]
    LET       [reduce using rule 24 (asignacion)]
    $default  reduce using rule 24 (asignacion)

    bloque         go to state 91
    sentencia      go to state 26
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 85

   38 condicion: comparacion OP_AND comparacion .

    $default  reduce using rule 38 (condicion)


state 86

   39 condicion: comparacion OP_OR comparacion .

    $default  reduce using rule 39 (condicion)


state 87

   42 repeticion: WHILE P_A condicion P_C LL_A . bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID        [reduce using rule 24 (asignacion)]
    IF        [reduce using rule 24 (asignacion)]
    WHILE     [reduce using rule 24 (asignacion)]
    BETWEEN   [reduce using rule 24 (asignacion)]
    LET       [reduce using rule 24 (asignacion)]
    $default  reduce using rule 24 (asignacion)

    bloque         go to state 92
    sentencia      go to state 26
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 88

   43 between: BETWEEN P_A ID COMA COR_A . operacion PUNTO_COMA operacion COR_C P_C

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    operacion  go to state 93
    termino    go to state 51
    factor     go to state 52


state 89

   25 operacion: operacion . OP_SUMA termino
   26          | operacion . OP_RESTA termino
   48 lista_valores: operacion .
   49              | operacion . PUNTO_COMA lista_valores

    PUNTO_COMA  shift, and go to state 94
    OP_SUMA     shift, and go to state 64
    OP_RESTA    shift, and go to state 65

    $default  reduce using rule 48 (lista_valores)


state 90

   45 tupla: P_A lista_valores . P_C

    P_C  shift, and go to state 95


state 91

   15 bloque: bloque . sentencia
   35 decision: IF P_A condicion P_C LL_A bloque . LL_C
   36         | IF P_A condicion P_C LL_A bloque . LL_C ELSE LL_A bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    LL_C     shift, and go to state 96
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID       [reduce using rule 24 (asignacion)]
    IF       [reduce using rule 24 (asignacion)]
    LL_C     [reduce using rule 24 (asignacion)]
    WHILE    [reduce using rule 24 (asignacion)]
    BETWEEN  [reduce using rule 24 (asignacion)]
    LET      [reduce using rule 24 (asignacion)]

    sentencia      go to state 43
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 92

   15 bloque: bloque . sentencia
   42 repeticion: WHILE P_A condicion P_C LL_A bloque . LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    LL_C     shift, and go to state 97
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID       [reduce using rule 24 (asignacion)]
    IF       [reduce using rule 24 (asignacion)]
    LL_C     [reduce using rule 24 (asignacion)]
    WHILE    [reduce using rule 24 (asignacion)]
    BETWEEN  [reduce using rule 24 (asignacion)]
    LET      [reduce using rule 24 (asignacion)]

    sentencia      go to state 43
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 93

   25 operacion: operacion . OP_SUMA termino
   26          | operacion . OP_RESTA termino
   43 between: BETWEEN P_A ID COMA COR_A operacion . PUNTO_COMA operacion COR_C P_C

    PUNTO_COMA  shift, and go to state 98
    OP_SUMA     shift, and go to state 64
    OP_RESTA    shift, and go to state 65


state 94

   49 lista_valores: operacion PUNTO_COMA . lista_valores

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    operacion      go to state 89
    termino        go to state 51
    factor         go to state 52
    lista_valores  go to state 99


state 95

   45 tupla: P_A lista_valores P_C .

    $default  reduce using rule 45 (tupla)


state 96

   35 decision: IF P_A condicion P_C LL_A bloque LL_C .
   36         | IF P_A condicion P_C LL_A bloque LL_C . ELSE LL_A bloque LL_C

    ELSE  shift, and go to state 100

    $default  reduce using rule 35 (decision)


state 97

   42 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C .

    $default  reduce using rule 42 (repeticion)


state 98

   43 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA . operacion COR_C P_C

    ID         shift, and go to state 53
    CONSTINT   shift, and go to state 46
    CONSTREAL  shift, and go to state 47
    P_A        shift, and go to state 49

    operacion  go to state 101
    termino    go to state 51
    factor     go to state 52


state 99

   49 lista_valores: operacion PUNTO_COMA lista_valores .

    $default  reduce using rule 49 (lista_valores)


state 100

   36 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE . LL_A bloque LL_C

    LL_A  shift, and go to state 102


state 101

   25 operacion: operacion . OP_SUMA termino
   26          | operacion . OP_RESTA termino
   43 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion . COR_C P_C

    OP_SUMA   shift, and go to state 64
    OP_RESTA  shift, and go to state 65
    COR_C     shift, and go to state 103


state 102

   36 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A . bloque LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID        [reduce using rule 24 (asignacion)]
    IF        [reduce using rule 24 (asignacion)]
    WHILE     [reduce using rule 24 (asignacion)]
    BETWEEN   [reduce using rule 24 (asignacion)]
    LET       [reduce using rule 24 (asignacion)]
    $default  reduce using rule 24 (asignacion)

    bloque         go to state 104
    sentencia      go to state 26
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 103

   43 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C . P_C

    P_C  shift, and go to state 105


state 104

   15 bloque: bloque . sentencia
   36 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque . LL_C

    ID       shift, and go to state 20
    IF       shift, and go to state 21
    LL_C     shift, and go to state 106
    WHILE    shift, and go to state 22
    BETWEEN  shift, and go to state 23
    LET      shift, and go to state 24

    ID       [reduce using rule 24 (asignacion)]
    IF       [reduce using rule 24 (asignacion)]
    LL_C     [reduce using rule 24 (asignacion)]
    WHILE    [reduce using rule 24 (asignacion)]
    BETWEEN  [reduce using rule 24 (asignacion)]
    LET      [reduce using rule 24 (asignacion)]

    sentencia      go to state 43
    asignacion     go to state 27
    decision       go to state 28
    repeticion     go to state 29
    between        go to state 30
    asignacionlet  go to state 31


state 105

   43 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C .

    $default  reduce using rule 43 (between)


state 106

   36 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C .

    $default  reduce using rule 36 (decision)
