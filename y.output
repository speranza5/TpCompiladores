Terminals unused in grammar

   PALABRA
   TEXTO
   COM_CIERRE
   COM_APER


Estado 56 conflictos: 10 reducción(ones)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: $@1 declaracion algoritmo

    3 $@2: /* vacío */

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF

    5 declaraciones_variables: declaraciones_variables declaracion_variable
    6                        | declaracion_variable

    7 $@3: /* vacío */

    8 declaracion_variable: ENTERO $@3 DOS_PUNTOS variables

    9 $@4: /* vacío */

   10 declaracion_variable: REAL $@4 DOS_PUNTOS variables

   11 $@5: /* vacío */

   12 declaracion_variable: STRING $@5 DOS_PUNTOS variables

   13 variables: variables PUNTO_COMA ID
   14          | ID

   15 $@6: /* vacío */

   16 algoritmo: $@6 INICIO bloque FIN

   17 bloque: sentencia
   18       | bloque sentencia

   19 sentencia: asignacion
   20          | decision
   21          | repeticion
   22          | between
   23          | asignacionlet
   24          | comentarios
   25          | ingreso
   26          | egreso

   27 asignacion: ID OP_ASIG ID
   28           | ID OP_ASIG operacion
   29           | ID OP_ASIG CONSTSTRING

   30 operacion: operacion OP_SUMA termino
   31          | operacion OP_RESTA termino
   32          | termino

   33 termino: termino OP_MUL factor
   34        | termino OP_DIV factor
   35        | factor

   36 factor: ID
   37       | CONSTINT
   38       | CONSTREAL
   39       | P_A operacion P_C

   40 decision: IF P_A condicion P_C LL_A bloque LL_C
   41         | IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

   42 condicion: comparacion
   43          | comparacion OP_AND comparacion
   44          | comparacion OP_OR comparacion
   45          | OP_NOT comparacion

   46 comparacion: factor op_comparacion factor

   47 op_comparacion: OP_MENOR
   48               | OP_MENORIGUAL
   49               | OP_MAYOR
   50               | OP_MAYORIGUAL
   51               | OP_DISTINTO
   52               | OP_IGUALDAD

   53 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C

   54 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

   55 asignacionlet: LET lista_var OP_IGUAL P_A lista_valores P_C

   56 lista_var: lista_var COMA ID
   57          | ID

   58 lista_valores: operacion
   59              | lista_valores PUNTO_COMA operacion

   60 comentarios: COMENTARIO

   61 ingreso: GET ID

   62 egreso: DISPLAY CONSTSTRING
   63       | DISPLAY ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 13 14 27 28 29 36 54 56 57 61 63
CONSTINT (259) 37
CONSTREAL (260) 38
CONSTSTRING (261) 29 62
ENTERO (262) 8
STRING (263) 12
REAL (264) 10
PUNTO_COMA (265) 13 54 59
COMA (266) 54 56
DOS_PUNTOS (267) 8 10 12
ENDEF (268) 4
DEFVAR (269) 4
PALABRA (270)
TEXTO (271)
COMENTARIO (272) 60
OP_ASIG (273) 27 28 29
INICIO (274) 16
FIN (275) 16
P_A (276) 39 40 41 53 54 55
P_C (277) 39 40 41 53 54 55
OP_SUMA (278) 30
OP_RESTA (279) 31
OP_MUL (280) 33
OP_DIV (281) 34
IF (282) 40 41
ELSE (283) 41
LL_A (284) 40 41 53
LL_C (285) 40 41 53
OP_AND (286) 43
OP_OR (287) 44
OP_NOT (288) 45
WHILE (289) 53
OP_MENOR (290) 47
OP_MENORIGUAL (291) 48
OP_MAYOR (292) 49
OP_MAYORIGUAL (293) 50
OP_DISTINTO (294) 51
OP_IGUALDAD (295) 52
BETWEEN (296) 54
COR_A (297) 54
COR_C (298) 54
LET (299) 55
OP_IGUAL (300) 55
COM_CIERRE (301)
COM_APER (302)
GET (303) 61
DISPLAY (304) 62 63


No terminales con las reglas donde aparecen

$accept (50)
    en la izquierda: 0
programa (51)
    en la izquierda: 2, en la derecha: 0
$@1 (52)
    en la izquierda: 1, en la derecha: 2
declaracion (53)
    en la izquierda: 4, en la derecha: 2
$@2 (54)
    en la izquierda: 3, en la derecha: 4
declaraciones_variables (55)
    en la izquierda: 5 6, en la derecha: 4 5
declaracion_variable (56)
    en la izquierda: 8 10 12, en la derecha: 5 6
$@3 (57)
    en la izquierda: 7, en la derecha: 8
$@4 (58)
    en la izquierda: 9, en la derecha: 10
$@5 (59)
    en la izquierda: 11, en la derecha: 12
variables (60)
    en la izquierda: 13 14, en la derecha: 8 10 12 13
algoritmo (61)
    en la izquierda: 16, en la derecha: 2
$@6 (62)
    en la izquierda: 15, en la derecha: 16
bloque (63)
    en la izquierda: 17 18, en la derecha: 16 18 40 41 53
sentencia (64)
    en la izquierda: 19 20 21 22 23 24 25 26, en la derecha: 17 18
asignacion (65)
    en la izquierda: 27 28 29, en la derecha: 19
operacion (66)
    en la izquierda: 30 31 32, en la derecha: 28 30 31 39 54 58 59
termino (67)
    en la izquierda: 33 34 35, en la derecha: 30 31 32 33 34
factor (68)
    en la izquierda: 36 37 38 39, en la derecha: 33 34 35 46
decision (69)
    en la izquierda: 40 41, en la derecha: 20
condicion (70)
    en la izquierda: 42 43 44 45, en la derecha: 40 41 53
comparacion (71)
    en la izquierda: 46, en la derecha: 42 43 44 45
op_comparacion (72)
    en la izquierda: 47 48 49 50 51 52, en la derecha: 46
repeticion (73)
    en la izquierda: 53, en la derecha: 21
between (74)
    en la izquierda: 54, en la derecha: 22
asignacionlet (75)
    en la izquierda: 55, en la derecha: 23
lista_var (76)
    en la izquierda: 56 57, en la derecha: 55 56
lista_valores (77)
    en la izquierda: 58 59, en la derecha: 55 59
comentarios (78)
    en la izquierda: 60, en la derecha: 24
ingreso (79)
    en la izquierda: 61, en la derecha: 25
egreso (80)
    en la izquierda: 62 63, en la derecha: 26


estado 0

    0 $accept: . programa $end

    $default  reduce usando la regla 1 ($@1)

    programa  ir al estado 1
    $@1       ir al estado 2


estado 1

    0 $accept: programa . $end

    $end  desplazar e ir al estado 3


estado 2

    2 programa: $@1 . declaracion algoritmo

    DEFVAR  desplazar e ir al estado 4

    declaracion  ir al estado 5


estado 3

    0 $accept: programa $end .

    $default  aceptar


estado 4

    4 declaracion: DEFVAR . $@2 declaraciones_variables ENDEF

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 6


estado 5

    2 programa: $@1 declaracion . algoritmo

    $default  reduce usando la regla 15 ($@6)

    algoritmo  ir al estado 7
    $@6        ir al estado 8


estado 6

    4 declaracion: DEFVAR $@2 . declaraciones_variables ENDEF

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11

    declaraciones_variables  ir al estado 12
    declaracion_variable     ir al estado 13


estado 7

    2 programa: $@1 declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 8

   16 algoritmo: $@6 . INICIO bloque FIN

    INICIO  desplazar e ir al estado 14


estado 9

    8 declaracion_variable: ENTERO . $@3 DOS_PUNTOS variables

    $default  reduce usando la regla 7 ($@3)

    $@3  ir al estado 15


estado 10

   12 declaracion_variable: STRING . $@5 DOS_PUNTOS variables

    $default  reduce usando la regla 11 ($@5)

    $@5  ir al estado 16


estado 11

   10 declaracion_variable: REAL . $@4 DOS_PUNTOS variables

    $default  reduce usando la regla 9 ($@4)

    $@4  ir al estado 17


estado 12

    4 declaracion: DEFVAR $@2 declaraciones_variables . ENDEF
    5 declaraciones_variables: declaraciones_variables . declaracion_variable

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11
    ENDEF   desplazar e ir al estado 18

    declaracion_variable  ir al estado 19


estado 13

    6 declaraciones_variables: declaracion_variable .

    $default  reduce usando la regla 6 (declaraciones_variables)


estado 14

   16 algoritmo: $@6 INICIO . bloque FIN

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 28
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 15

    8 declaracion_variable: ENTERO $@3 . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 38


estado 16

   12 declaracion_variable: STRING $@5 . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 39


estado 17

   10 declaracion_variable: REAL $@4 . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 40


estado 18

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF .

    $default  reduce usando la regla 4 (declaracion)


estado 19

    5 declaraciones_variables: declaraciones_variables declaracion_variable .

    $default  reduce usando la regla 5 (declaraciones_variables)


estado 20

   27 asignacion: ID . OP_ASIG ID
   28           | ID . OP_ASIG operacion
   29           | ID . OP_ASIG CONSTSTRING

    OP_ASIG  desplazar e ir al estado 41


estado 21

   60 comentarios: COMENTARIO .

    $default  reduce usando la regla 60 (comentarios)


estado 22

   40 decision: IF . P_A condicion P_C LL_A bloque LL_C
   41         | IF . P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_A  desplazar e ir al estado 42


estado 23

   53 repeticion: WHILE . P_A condicion P_C LL_A bloque LL_C

    P_A  desplazar e ir al estado 43


estado 24

   54 between: BETWEEN . P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    P_A  desplazar e ir al estado 44


estado 25

   55 asignacionlet: LET . lista_var OP_IGUAL P_A lista_valores P_C

    ID  desplazar e ir al estado 45

    lista_var  ir al estado 46


estado 26

   61 ingreso: GET . ID

    ID  desplazar e ir al estado 47


estado 27

   62 egreso: DISPLAY . CONSTSTRING
   63       | DISPLAY . ID

    ID           desplazar e ir al estado 48
    CONSTSTRING  desplazar e ir al estado 49


estado 28

   16 algoritmo: $@6 INICIO bloque . FIN
   18 bloque: bloque . sentencia

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    FIN         desplazar e ir al estado 50
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 51
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 29

   17 bloque: sentencia .

    $default  reduce usando la regla 17 (bloque)


estado 30

   19 sentencia: asignacion .

    $default  reduce usando la regla 19 (sentencia)


estado 31

   20 sentencia: decision .

    $default  reduce usando la regla 20 (sentencia)


estado 32

   21 sentencia: repeticion .

    $default  reduce usando la regla 21 (sentencia)


estado 33

   22 sentencia: between .

    $default  reduce usando la regla 22 (sentencia)


estado 34

   23 sentencia: asignacionlet .

    $default  reduce usando la regla 23 (sentencia)


estado 35

   24 sentencia: comentarios .

    $default  reduce usando la regla 24 (sentencia)


estado 36

   25 sentencia: ingreso .

    $default  reduce usando la regla 25 (sentencia)


estado 37

   26 sentencia: egreso .

    $default  reduce usando la regla 26 (sentencia)


estado 38

    8 declaracion_variable: ENTERO $@3 DOS_PUNTOS . variables

    ID  desplazar e ir al estado 52

    variables  ir al estado 53


estado 39

   12 declaracion_variable: STRING $@5 DOS_PUNTOS . variables

    ID  desplazar e ir al estado 52

    variables  ir al estado 54


estado 40

   10 declaracion_variable: REAL $@4 DOS_PUNTOS . variables

    ID  desplazar e ir al estado 52

    variables  ir al estado 55


estado 41

   27 asignacion: ID OP_ASIG . ID
   28           | ID OP_ASIG . operacion
   29           | ID OP_ASIG . CONSTSTRING

    ID           desplazar e ir al estado 56
    CONSTINT     desplazar e ir al estado 57
    CONSTREAL    desplazar e ir al estado 58
    CONSTSTRING  desplazar e ir al estado 59
    P_A          desplazar e ir al estado 60

    operacion  ir al estado 61
    termino    ir al estado 62
    factor     ir al estado 63


estado 42

   40 decision: IF P_A . condicion P_C LL_A bloque LL_C
   41         | IF P_A . condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60
    OP_NOT     desplazar e ir al estado 65

    factor       ir al estado 66
    condicion    ir al estado 67
    comparacion  ir al estado 68


estado 43

   53 repeticion: WHILE P_A . condicion P_C LL_A bloque LL_C

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60
    OP_NOT     desplazar e ir al estado 65

    factor       ir al estado 66
    condicion    ir al estado 69
    comparacion  ir al estado 68


estado 44

   54 between: BETWEEN P_A . ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    ID  desplazar e ir al estado 70


estado 45

   57 lista_var: ID .

    $default  reduce usando la regla 57 (lista_var)


estado 46

   55 asignacionlet: LET lista_var . OP_IGUAL P_A lista_valores P_C
   56 lista_var: lista_var . COMA ID

    COMA      desplazar e ir al estado 71
    OP_IGUAL  desplazar e ir al estado 72


estado 47

   61 ingreso: GET ID .

    $default  reduce usando la regla 61 (ingreso)


estado 48

   63 egreso: DISPLAY ID .

    $default  reduce usando la regla 63 (egreso)


estado 49

   62 egreso: DISPLAY CONSTSTRING .

    $default  reduce usando la regla 62 (egreso)


estado 50

   16 algoritmo: $@6 INICIO bloque FIN .

    $default  reduce usando la regla 16 (algoritmo)


estado 51

   18 bloque: bloque sentencia .

    $default  reduce usando la regla 18 (bloque)


estado 52

   14 variables: ID .

    $default  reduce usando la regla 14 (variables)


estado 53

    8 declaracion_variable: ENTERO $@3 DOS_PUNTOS variables .
   13 variables: variables . PUNTO_COMA ID

    PUNTO_COMA  desplazar e ir al estado 73

    $default  reduce usando la regla 8 (declaracion_variable)


estado 54

   12 declaracion_variable: STRING $@5 DOS_PUNTOS variables .
   13 variables: variables . PUNTO_COMA ID

    PUNTO_COMA  desplazar e ir al estado 73

    $default  reduce usando la regla 12 (declaracion_variable)


estado 55

   10 declaracion_variable: REAL $@4 DOS_PUNTOS variables .
   13 variables: variables . PUNTO_COMA ID

    PUNTO_COMA  desplazar e ir al estado 73

    $default  reduce usando la regla 10 (declaracion_variable)


estado 56

   27 asignacion: ID OP_ASIG ID .
   36 factor: ID .

    ID          reduce usando la regla 27 (asignacion)
    ID          [reduce usando la regla 36 (factor)]
    COMENTARIO  reduce usando la regla 27 (asignacion)
    COMENTARIO  [reduce usando la regla 36 (factor)]
    FIN         reduce usando la regla 27 (asignacion)
    FIN         [reduce usando la regla 36 (factor)]
    OP_SUMA     reduce usando la regla 36 (factor)
    OP_RESTA    reduce usando la regla 36 (factor)
    OP_MUL      reduce usando la regla 36 (factor)
    OP_DIV      reduce usando la regla 36 (factor)
    IF          reduce usando la regla 27 (asignacion)
    IF          [reduce usando la regla 36 (factor)]
    LL_C        reduce usando la regla 27 (asignacion)
    LL_C        [reduce usando la regla 36 (factor)]
    WHILE       reduce usando la regla 27 (asignacion)
    WHILE       [reduce usando la regla 36 (factor)]
    BETWEEN     reduce usando la regla 27 (asignacion)
    BETWEEN     [reduce usando la regla 36 (factor)]
    LET         reduce usando la regla 27 (asignacion)
    LET         [reduce usando la regla 36 (factor)]
    GET         reduce usando la regla 27 (asignacion)
    GET         [reduce usando la regla 36 (factor)]
    DISPLAY     reduce usando la regla 27 (asignacion)
    DISPLAY     [reduce usando la regla 36 (factor)]
    $default    reduce usando la regla 27 (asignacion)


estado 57

   37 factor: CONSTINT .

    $default  reduce usando la regla 37 (factor)


estado 58

   38 factor: CONSTREAL .

    $default  reduce usando la regla 38 (factor)


estado 59

   29 asignacion: ID OP_ASIG CONSTSTRING .

    $default  reduce usando la regla 29 (asignacion)


estado 60

   39 factor: P_A . operacion P_C

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    operacion  ir al estado 74
    termino    ir al estado 62
    factor     ir al estado 63


estado 61

   28 asignacion: ID OP_ASIG operacion .
   30 operacion: operacion . OP_SUMA termino
   31          | operacion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 75
    OP_RESTA  desplazar e ir al estado 76

    $default  reduce usando la regla 28 (asignacion)


estado 62

   32 operacion: termino .
   33 termino: termino . OP_MUL factor
   34        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 77
    OP_DIV  desplazar e ir al estado 78

    $default  reduce usando la regla 32 (operacion)


estado 63

   35 termino: factor .

    $default  reduce usando la regla 35 (termino)


estado 64

   36 factor: ID .

    $default  reduce usando la regla 36 (factor)


estado 65

   45 condicion: OP_NOT . comparacion

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    factor       ir al estado 66
    comparacion  ir al estado 79


estado 66

   46 comparacion: factor . op_comparacion factor

    OP_MENOR       desplazar e ir al estado 80
    OP_MENORIGUAL  desplazar e ir al estado 81
    OP_MAYOR       desplazar e ir al estado 82
    OP_MAYORIGUAL  desplazar e ir al estado 83
    OP_DISTINTO    desplazar e ir al estado 84
    OP_IGUALDAD    desplazar e ir al estado 85

    op_comparacion  ir al estado 86


estado 67

   40 decision: IF P_A condicion . P_C LL_A bloque LL_C
   41         | IF P_A condicion . P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_C  desplazar e ir al estado 87


estado 68

   42 condicion: comparacion .
   43          | comparacion . OP_AND comparacion
   44          | comparacion . OP_OR comparacion

    OP_AND  desplazar e ir al estado 88
    OP_OR   desplazar e ir al estado 89

    $default  reduce usando la regla 42 (condicion)


estado 69

   53 repeticion: WHILE P_A condicion . P_C LL_A bloque LL_C

    P_C  desplazar e ir al estado 90


estado 70

   54 between: BETWEEN P_A ID . COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    COMA  desplazar e ir al estado 91


estado 71

   56 lista_var: lista_var COMA . ID

    ID  desplazar e ir al estado 92


estado 72

   55 asignacionlet: LET lista_var OP_IGUAL . P_A lista_valores P_C

    P_A  desplazar e ir al estado 93


estado 73

   13 variables: variables PUNTO_COMA . ID

    ID  desplazar e ir al estado 94


estado 74

   30 operacion: operacion . OP_SUMA termino
   31          | operacion . OP_RESTA termino
   39 factor: P_A operacion . P_C

    P_C       desplazar e ir al estado 95
    OP_SUMA   desplazar e ir al estado 75
    OP_RESTA  desplazar e ir al estado 76


estado 75

   30 operacion: operacion OP_SUMA . termino

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    termino  ir al estado 96
    factor   ir al estado 63


estado 76

   31 operacion: operacion OP_RESTA . termino

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    termino  ir al estado 97
    factor   ir al estado 63


estado 77

   33 termino: termino OP_MUL . factor

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    factor  ir al estado 98


estado 78

   34 termino: termino OP_DIV . factor

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    factor  ir al estado 99


estado 79

   45 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 45 (condicion)


estado 80

   47 op_comparacion: OP_MENOR .

    $default  reduce usando la regla 47 (op_comparacion)


estado 81

   48 op_comparacion: OP_MENORIGUAL .

    $default  reduce usando la regla 48 (op_comparacion)


estado 82

   49 op_comparacion: OP_MAYOR .

    $default  reduce usando la regla 49 (op_comparacion)


estado 83

   50 op_comparacion: OP_MAYORIGUAL .

    $default  reduce usando la regla 50 (op_comparacion)


estado 84

   51 op_comparacion: OP_DISTINTO .

    $default  reduce usando la regla 51 (op_comparacion)


estado 85

   52 op_comparacion: OP_IGUALDAD .

    $default  reduce usando la regla 52 (op_comparacion)


estado 86

   46 comparacion: factor op_comparacion . factor

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    factor  ir al estado 100


estado 87

   40 decision: IF P_A condicion P_C . LL_A bloque LL_C
   41         | IF P_A condicion P_C . LL_A bloque LL_C ELSE LL_A bloque LL_C

    LL_A  desplazar e ir al estado 101


estado 88

   43 condicion: comparacion OP_AND . comparacion

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    factor       ir al estado 66
    comparacion  ir al estado 102


estado 89

   44 condicion: comparacion OP_OR . comparacion

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    factor       ir al estado 66
    comparacion  ir al estado 103


estado 90

   53 repeticion: WHILE P_A condicion P_C . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 104


estado 91

   54 between: BETWEEN P_A ID COMA . COR_A operacion PUNTO_COMA operacion COR_C P_C

    COR_A  desplazar e ir al estado 105


estado 92

   56 lista_var: lista_var COMA ID .

    $default  reduce usando la regla 56 (lista_var)


estado 93

   55 asignacionlet: LET lista_var OP_IGUAL P_A . lista_valores P_C

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    operacion      ir al estado 106
    termino        ir al estado 62
    factor         ir al estado 63
    lista_valores  ir al estado 107


estado 94

   13 variables: variables PUNTO_COMA ID .

    $default  reduce usando la regla 13 (variables)


estado 95

   39 factor: P_A operacion P_C .

    $default  reduce usando la regla 39 (factor)


estado 96

   30 operacion: operacion OP_SUMA termino .
   33 termino: termino . OP_MUL factor
   34        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 77
    OP_DIV  desplazar e ir al estado 78

    $default  reduce usando la regla 30 (operacion)


estado 97

   31 operacion: operacion OP_RESTA termino .
   33 termino: termino . OP_MUL factor
   34        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 77
    OP_DIV  desplazar e ir al estado 78

    $default  reduce usando la regla 31 (operacion)


estado 98

   33 termino: termino OP_MUL factor .

    $default  reduce usando la regla 33 (termino)


estado 99

   34 termino: termino OP_DIV factor .

    $default  reduce usando la regla 34 (termino)


estado 100

   46 comparacion: factor op_comparacion factor .

    $default  reduce usando la regla 46 (comparacion)


estado 101

   40 decision: IF P_A condicion P_C LL_A . bloque LL_C
   41         | IF P_A condicion P_C LL_A . bloque LL_C ELSE LL_A bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 108
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 102

   43 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 43 (condicion)


estado 103

   44 condicion: comparacion OP_OR comparacion .

    $default  reduce usando la regla 44 (condicion)


estado 104

   53 repeticion: WHILE P_A condicion P_C LL_A . bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 109
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 105

   54 between: BETWEEN P_A ID COMA COR_A . operacion PUNTO_COMA operacion COR_C P_C

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    operacion  ir al estado 110
    termino    ir al estado 62
    factor     ir al estado 63


estado 106

   30 operacion: operacion . OP_SUMA termino
   31          | operacion . OP_RESTA termino
   58 lista_valores: operacion .

    OP_SUMA   desplazar e ir al estado 75
    OP_RESTA  desplazar e ir al estado 76

    $default  reduce usando la regla 58 (lista_valores)


estado 107

   55 asignacionlet: LET lista_var OP_IGUAL P_A lista_valores . P_C
   59 lista_valores: lista_valores . PUNTO_COMA operacion

    PUNTO_COMA  desplazar e ir al estado 111
    P_C         desplazar e ir al estado 112


estado 108

   18 bloque: bloque . sentencia
   40 decision: IF P_A condicion P_C LL_A bloque . LL_C
   41         | IF P_A condicion P_C LL_A bloque . LL_C ELSE LL_A bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 113
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 51
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 109

   18 bloque: bloque . sentencia
   53 repeticion: WHILE P_A condicion P_C LL_A bloque . LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 114
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 51
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 110

   30 operacion: operacion . OP_SUMA termino
   31          | operacion . OP_RESTA termino
   54 between: BETWEEN P_A ID COMA COR_A operacion . PUNTO_COMA operacion COR_C P_C

    PUNTO_COMA  desplazar e ir al estado 115
    OP_SUMA     desplazar e ir al estado 75
    OP_RESTA    desplazar e ir al estado 76


estado 111

   59 lista_valores: lista_valores PUNTO_COMA . operacion

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    operacion  ir al estado 116
    termino    ir al estado 62
    factor     ir al estado 63


estado 112

   55 asignacionlet: LET lista_var OP_IGUAL P_A lista_valores P_C .

    $default  reduce usando la regla 55 (asignacionlet)


estado 113

   40 decision: IF P_A condicion P_C LL_A bloque LL_C .
   41         | IF P_A condicion P_C LL_A bloque LL_C . ELSE LL_A bloque LL_C

    ELSE  desplazar e ir al estado 117

    $default  reduce usando la regla 40 (decision)


estado 114

   53 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C .

    $default  reduce usando la regla 53 (repeticion)


estado 115

   54 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA . operacion COR_C P_C

    ID         desplazar e ir al estado 64
    CONSTINT   desplazar e ir al estado 57
    CONSTREAL  desplazar e ir al estado 58
    P_A        desplazar e ir al estado 60

    operacion  ir al estado 118
    termino    ir al estado 62
    factor     ir al estado 63


estado 116

   30 operacion: operacion . OP_SUMA termino
   31          | operacion . OP_RESTA termino
   59 lista_valores: lista_valores PUNTO_COMA operacion .

    OP_SUMA   desplazar e ir al estado 75
    OP_RESTA  desplazar e ir al estado 76

    $default  reduce usando la regla 59 (lista_valores)


estado 117

   41 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 119


estado 118

   30 operacion: operacion . OP_SUMA termino
   31          | operacion . OP_RESTA termino
   54 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion . COR_C P_C

    OP_SUMA   desplazar e ir al estado 75
    OP_RESTA  desplazar e ir al estado 76
    COR_C     desplazar e ir al estado 120


estado 119

   41 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A . bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 121
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 120

   54 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C . P_C

    P_C  desplazar e ir al estado 122


estado 121

   18 bloque: bloque . sentencia
   41 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque . LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 123
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 51
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 122

   54 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C .

    $default  reduce usando la regla 54 (between)


estado 123

   41 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C .

    $default  reduce usando la regla 41 (decision)
