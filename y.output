Terminals unused in grammar

   PALABRA
   TEXTO
   COM_CIERRE
   COM_APER


Estado 54 conflictos: 10 reducción(ones)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: $@1 declaracion algoritmo

    3 $@2: /* vacío */

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF

    5 declaraciones_variables: declaraciones_variables declaracion_variable
    6                        | declaracion_variable

    7 declaracion_variable: ENTERO DOS_PUNTOS variables
    8                     | REAL DOS_PUNTOS variables
    9                     | STRING DOS_PUNTOS variables

   10 variables: ID
   11          | variables PUNTO_COMA ID

   12 $@3: /* vacío */

   13 algoritmo: $@3 INICIO bloque FIN

   14 bloque: sentencia
   15       | bloque sentencia

   16 sentencia: asignacion
   17          | decision
   18          | repeticion
   19          | between
   20          | asignacionlet
   21          | comentarios
   22          | ingreso
   23          | egreso

   24 asignacion: ID OP_ASIG ID
   25           | ID OP_ASIG operacion
   26           | ID OP_ASIG CONSTSTRING

   27 operacion: operacion OP_SUMA termino
   28          | operacion OP_RESTA termino
   29          | termino

   30 termino: termino OP_MUL factor
   31        | termino OP_DIV factor
   32        | factor

   33 factor: ID
   34       | CONSTINT
   35       | CONSTREAL
   36       | P_A operacion P_C

   37 decision: IF P_A condicion P_C LL_A bloque LL_C
   38         | IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

   39 condicion: comparacion
   40          | comparacion OP_AND comparacion
   41          | comparacion OP_OR comparacion
   42          | OP_NOT comparacion

   43 comparacion: factor op_comparacion factor

   44 op_comparacion: OP_MENOR
   45               | OP_MENORIGUAL
   46               | OP_MAYOR
   47               | OP_MAYORIGUAL
   48               | OP_DISTINTO
   49               | OP_IGUALDAD

   50 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C

   51 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

   52 asignacionlet: LET lista_var OP_IGUAL tupla

   53 tupla: P_A lista_valores P_C

   54 lista_var: lista_var COMA ID
   55          | ID

   56 lista_valores: operacion
   57              | lista_valores PUNTO_COMA operacion

   58 comentarios: COMENTARIO

   59 ingreso: GET ID

   60 egreso: DISPLAY CONSTSTRING
   61       | DISPLAY ID


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 10 11 24 25 26 33 51 54 55 59 61
CONSTINT (259) 34
CONSTREAL (260) 35
CONSTSTRING (261) 26 60
ENTERO (262) 7
STRING (263) 9
REAL (264) 8
PUNTO_COMA (265) 11 51 57
COMA (266) 51 54
DOS_PUNTOS (267) 7 8 9
ENDEF (268) 4
DEFVAR (269) 4
PALABRA (270)
TEXTO (271)
COMENTARIO (272) 58
OP_ASIG (273) 24 25 26
INICIO (274) 13
FIN (275) 13
P_A (276) 36 37 38 50 51 53
P_C (277) 36 37 38 50 51 53
OP_SUMA (278) 27
OP_RESTA (279) 28
OP_MUL (280) 30
OP_DIV (281) 31
IF (282) 37 38
ELSE (283) 38
LL_A (284) 37 38 50
LL_C (285) 37 38 50
OP_AND (286) 40
OP_OR (287) 41
OP_NOT (288) 42
WHILE (289) 50
OP_MENOR (290) 44
OP_MENORIGUAL (291) 45
OP_MAYOR (292) 46
OP_MAYORIGUAL (293) 47
OP_DISTINTO (294) 48
OP_IGUALDAD (295) 49
BETWEEN (296) 51
COR_A (297) 51
COR_C (298) 51
LET (299) 52
OP_IGUAL (300) 52
COM_CIERRE (301)
COM_APER (302)
GET (303) 59
DISPLAY (304) 60 61


No terminales con las reglas donde aparecen

$accept (50)
    en la izquierda: 0
programa (51)
    en la izquierda: 2, en la derecha: 0
$@1 (52)
    en la izquierda: 1, en la derecha: 2
declaracion (53)
    en la izquierda: 4, en la derecha: 2
$@2 (54)
    en la izquierda: 3, en la derecha: 4
declaraciones_variables (55)
    en la izquierda: 5 6, en la derecha: 4 5
declaracion_variable (56)
    en la izquierda: 7 8 9, en la derecha: 5 6
variables (57)
    en la izquierda: 10 11, en la derecha: 7 8 9 11
algoritmo (58)
    en la izquierda: 13, en la derecha: 2
$@3 (59)
    en la izquierda: 12, en la derecha: 13
bloque (60)
    en la izquierda: 14 15, en la derecha: 13 15 37 38 50
sentencia (61)
    en la izquierda: 16 17 18 19 20 21 22 23, en la derecha: 14 15
asignacion (62)
    en la izquierda: 24 25 26, en la derecha: 16
operacion (63)
    en la izquierda: 27 28 29, en la derecha: 25 27 28 36 51 56 57
termino (64)
    en la izquierda: 30 31 32, en la derecha: 27 28 29 30 31
factor (65)
    en la izquierda: 33 34 35 36, en la derecha: 30 31 32 43
decision (66)
    en la izquierda: 37 38, en la derecha: 17
condicion (67)
    en la izquierda: 39 40 41 42, en la derecha: 37 38 50
comparacion (68)
    en la izquierda: 43, en la derecha: 39 40 41 42
op_comparacion (69)
    en la izquierda: 44 45 46 47 48 49, en la derecha: 43
repeticion (70)
    en la izquierda: 50, en la derecha: 18
between (71)
    en la izquierda: 51, en la derecha: 19
asignacionlet (72)
    en la izquierda: 52, en la derecha: 20
tupla (73)
    en la izquierda: 53, en la derecha: 52
lista_var (74)
    en la izquierda: 54 55, en la derecha: 52 54
lista_valores (75)
    en la izquierda: 56 57, en la derecha: 53 57
comentarios (76)
    en la izquierda: 58, en la derecha: 21
ingreso (77)
    en la izquierda: 59, en la derecha: 22
egreso (78)
    en la izquierda: 60 61, en la derecha: 23


estado 0

    0 $accept: . programa $end

    $default  reduce usando la regla 1 ($@1)

    programa  ir al estado 1
    $@1       ir al estado 2


estado 1

    0 $accept: programa . $end

    $end  desplazar e ir al estado 3


estado 2

    2 programa: $@1 . declaracion algoritmo

    DEFVAR  desplazar e ir al estado 4

    declaracion  ir al estado 5


estado 3

    0 $accept: programa $end .

    $default  aceptar


estado 4

    4 declaracion: DEFVAR . $@2 declaraciones_variables ENDEF

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 6


estado 5

    2 programa: $@1 declaracion . algoritmo

    $default  reduce usando la regla 12 ($@3)

    algoritmo  ir al estado 7
    $@3        ir al estado 8


estado 6

    4 declaracion: DEFVAR $@2 . declaraciones_variables ENDEF

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11

    declaraciones_variables  ir al estado 12
    declaracion_variable     ir al estado 13


estado 7

    2 programa: $@1 declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 8

   13 algoritmo: $@3 . INICIO bloque FIN

    INICIO  desplazar e ir al estado 14


estado 9

    7 declaracion_variable: ENTERO . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 15


estado 10

    9 declaracion_variable: STRING . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 16


estado 11

    8 declaracion_variable: REAL . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 17


estado 12

    4 declaracion: DEFVAR $@2 declaraciones_variables . ENDEF
    5 declaraciones_variables: declaraciones_variables . declaracion_variable

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11
    ENDEF   desplazar e ir al estado 18

    declaracion_variable  ir al estado 19


estado 13

    6 declaraciones_variables: declaracion_variable .

    $default  reduce usando la regla 6 (declaraciones_variables)


estado 14

   13 algoritmo: $@3 INICIO . bloque FIN

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 28
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 15

    7 declaracion_variable: ENTERO DOS_PUNTOS . variables

    ID  desplazar e ir al estado 38

    variables  ir al estado 39


estado 16

    9 declaracion_variable: STRING DOS_PUNTOS . variables

    ID  desplazar e ir al estado 38

    variables  ir al estado 40


estado 17

    8 declaracion_variable: REAL DOS_PUNTOS . variables

    ID  desplazar e ir al estado 38

    variables  ir al estado 41


estado 18

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF .

    $default  reduce usando la regla 4 (declaracion)


estado 19

    5 declaraciones_variables: declaraciones_variables declaracion_variable .

    $default  reduce usando la regla 5 (declaraciones_variables)


estado 20

   24 asignacion: ID . OP_ASIG ID
   25           | ID . OP_ASIG operacion
   26           | ID . OP_ASIG CONSTSTRING

    OP_ASIG  desplazar e ir al estado 42


estado 21

   58 comentarios: COMENTARIO .

    $default  reduce usando la regla 58 (comentarios)


estado 22

   37 decision: IF . P_A condicion P_C LL_A bloque LL_C
   38         | IF . P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_A  desplazar e ir al estado 43


estado 23

   50 repeticion: WHILE . P_A condicion P_C LL_A bloque LL_C

    P_A  desplazar e ir al estado 44


estado 24

   51 between: BETWEEN . P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    P_A  desplazar e ir al estado 45


estado 25

   52 asignacionlet: LET . lista_var OP_IGUAL tupla

    ID  desplazar e ir al estado 46

    lista_var  ir al estado 47


estado 26

   59 ingreso: GET . ID

    ID  desplazar e ir al estado 48


estado 27

   60 egreso: DISPLAY . CONSTSTRING
   61       | DISPLAY . ID

    ID           desplazar e ir al estado 49
    CONSTSTRING  desplazar e ir al estado 50


estado 28

   13 algoritmo: $@3 INICIO bloque . FIN
   15 bloque: bloque . sentencia

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    FIN         desplazar e ir al estado 51
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 52
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 29

   14 bloque: sentencia .

    $default  reduce usando la regla 14 (bloque)


estado 30

   16 sentencia: asignacion .

    $default  reduce usando la regla 16 (sentencia)


estado 31

   17 sentencia: decision .

    $default  reduce usando la regla 17 (sentencia)


estado 32

   18 sentencia: repeticion .

    $default  reduce usando la regla 18 (sentencia)


estado 33

   19 sentencia: between .

    $default  reduce usando la regla 19 (sentencia)


estado 34

   20 sentencia: asignacionlet .

    $default  reduce usando la regla 20 (sentencia)


estado 35

   21 sentencia: comentarios .

    $default  reduce usando la regla 21 (sentencia)


estado 36

   22 sentencia: ingreso .

    $default  reduce usando la regla 22 (sentencia)


estado 37

   23 sentencia: egreso .

    $default  reduce usando la regla 23 (sentencia)


estado 38

   10 variables: ID .

    $default  reduce usando la regla 10 (variables)


estado 39

    7 declaracion_variable: ENTERO DOS_PUNTOS variables .
   11 variables: variables . PUNTO_COMA ID

    PUNTO_COMA  desplazar e ir al estado 53

    $default  reduce usando la regla 7 (declaracion_variable)


estado 40

    9 declaracion_variable: STRING DOS_PUNTOS variables .
   11 variables: variables . PUNTO_COMA ID

    PUNTO_COMA  desplazar e ir al estado 53

    $default  reduce usando la regla 9 (declaracion_variable)


estado 41

    8 declaracion_variable: REAL DOS_PUNTOS variables .
   11 variables: variables . PUNTO_COMA ID

    PUNTO_COMA  desplazar e ir al estado 53

    $default  reduce usando la regla 8 (declaracion_variable)


estado 42

   24 asignacion: ID OP_ASIG . ID
   25           | ID OP_ASIG . operacion
   26           | ID OP_ASIG . CONSTSTRING

    ID           desplazar e ir al estado 54
    CONSTINT     desplazar e ir al estado 55
    CONSTREAL    desplazar e ir al estado 56
    CONSTSTRING  desplazar e ir al estado 57
    P_A          desplazar e ir al estado 58

    operacion  ir al estado 59
    termino    ir al estado 60
    factor     ir al estado 61


estado 43

   37 decision: IF P_A . condicion P_C LL_A bloque LL_C
   38         | IF P_A . condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58
    OP_NOT     desplazar e ir al estado 63

    factor       ir al estado 64
    condicion    ir al estado 65
    comparacion  ir al estado 66


estado 44

   50 repeticion: WHILE P_A . condicion P_C LL_A bloque LL_C

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58
    OP_NOT     desplazar e ir al estado 63

    factor       ir al estado 64
    condicion    ir al estado 67
    comparacion  ir al estado 66


estado 45

   51 between: BETWEEN P_A . ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    ID  desplazar e ir al estado 68


estado 46

   55 lista_var: ID .

    $default  reduce usando la regla 55 (lista_var)


estado 47

   52 asignacionlet: LET lista_var . OP_IGUAL tupla
   54 lista_var: lista_var . COMA ID

    COMA      desplazar e ir al estado 69
    OP_IGUAL  desplazar e ir al estado 70


estado 48

   59 ingreso: GET ID .

    $default  reduce usando la regla 59 (ingreso)


estado 49

   61 egreso: DISPLAY ID .

    $default  reduce usando la regla 61 (egreso)


estado 50

   60 egreso: DISPLAY CONSTSTRING .

    $default  reduce usando la regla 60 (egreso)


estado 51

   13 algoritmo: $@3 INICIO bloque FIN .

    $default  reduce usando la regla 13 (algoritmo)


estado 52

   15 bloque: bloque sentencia .

    $default  reduce usando la regla 15 (bloque)


estado 53

   11 variables: variables PUNTO_COMA . ID

    ID  desplazar e ir al estado 71


estado 54

   24 asignacion: ID OP_ASIG ID .
   33 factor: ID .

    ID          reduce usando la regla 24 (asignacion)
    ID          [reduce usando la regla 33 (factor)]
    COMENTARIO  reduce usando la regla 24 (asignacion)
    COMENTARIO  [reduce usando la regla 33 (factor)]
    FIN         reduce usando la regla 24 (asignacion)
    FIN         [reduce usando la regla 33 (factor)]
    OP_SUMA     reduce usando la regla 33 (factor)
    OP_RESTA    reduce usando la regla 33 (factor)
    OP_MUL      reduce usando la regla 33 (factor)
    OP_DIV      reduce usando la regla 33 (factor)
    IF          reduce usando la regla 24 (asignacion)
    IF          [reduce usando la regla 33 (factor)]
    LL_C        reduce usando la regla 24 (asignacion)
    LL_C        [reduce usando la regla 33 (factor)]
    WHILE       reduce usando la regla 24 (asignacion)
    WHILE       [reduce usando la regla 33 (factor)]
    BETWEEN     reduce usando la regla 24 (asignacion)
    BETWEEN     [reduce usando la regla 33 (factor)]
    LET         reduce usando la regla 24 (asignacion)
    LET         [reduce usando la regla 33 (factor)]
    GET         reduce usando la regla 24 (asignacion)
    GET         [reduce usando la regla 33 (factor)]
    DISPLAY     reduce usando la regla 24 (asignacion)
    DISPLAY     [reduce usando la regla 33 (factor)]
    $default    reduce usando la regla 24 (asignacion)


estado 55

   34 factor: CONSTINT .

    $default  reduce usando la regla 34 (factor)


estado 56

   35 factor: CONSTREAL .

    $default  reduce usando la regla 35 (factor)


estado 57

   26 asignacion: ID OP_ASIG CONSTSTRING .

    $default  reduce usando la regla 26 (asignacion)


estado 58

   36 factor: P_A . operacion P_C

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    operacion  ir al estado 72
    termino    ir al estado 60
    factor     ir al estado 61


estado 59

   25 asignacion: ID OP_ASIG operacion .
   27 operacion: operacion . OP_SUMA termino
   28          | operacion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 73
    OP_RESTA  desplazar e ir al estado 74

    $default  reduce usando la regla 25 (asignacion)


estado 60

   29 operacion: termino .
   30 termino: termino . OP_MUL factor
   31        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 75
    OP_DIV  desplazar e ir al estado 76

    $default  reduce usando la regla 29 (operacion)


estado 61

   32 termino: factor .

    $default  reduce usando la regla 32 (termino)


estado 62

   33 factor: ID .

    $default  reduce usando la regla 33 (factor)


estado 63

   42 condicion: OP_NOT . comparacion

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    factor       ir al estado 64
    comparacion  ir al estado 77


estado 64

   43 comparacion: factor . op_comparacion factor

    OP_MENOR       desplazar e ir al estado 78
    OP_MENORIGUAL  desplazar e ir al estado 79
    OP_MAYOR       desplazar e ir al estado 80
    OP_MAYORIGUAL  desplazar e ir al estado 81
    OP_DISTINTO    desplazar e ir al estado 82
    OP_IGUALDAD    desplazar e ir al estado 83

    op_comparacion  ir al estado 84


estado 65

   37 decision: IF P_A condicion . P_C LL_A bloque LL_C
   38         | IF P_A condicion . P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_C  desplazar e ir al estado 85


estado 66

   39 condicion: comparacion .
   40          | comparacion . OP_AND comparacion
   41          | comparacion . OP_OR comparacion

    OP_AND  desplazar e ir al estado 86
    OP_OR   desplazar e ir al estado 87

    $default  reduce usando la regla 39 (condicion)


estado 67

   50 repeticion: WHILE P_A condicion . P_C LL_A bloque LL_C

    P_C  desplazar e ir al estado 88


estado 68

   51 between: BETWEEN P_A ID . COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    COMA  desplazar e ir al estado 89


estado 69

   54 lista_var: lista_var COMA . ID

    ID  desplazar e ir al estado 90


estado 70

   52 asignacionlet: LET lista_var OP_IGUAL . tupla

    P_A  desplazar e ir al estado 91

    tupla  ir al estado 92


estado 71

   11 variables: variables PUNTO_COMA ID .

    $default  reduce usando la regla 11 (variables)


estado 72

   27 operacion: operacion . OP_SUMA termino
   28          | operacion . OP_RESTA termino
   36 factor: P_A operacion . P_C

    P_C       desplazar e ir al estado 93
    OP_SUMA   desplazar e ir al estado 73
    OP_RESTA  desplazar e ir al estado 74


estado 73

   27 operacion: operacion OP_SUMA . termino

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    termino  ir al estado 94
    factor   ir al estado 61


estado 74

   28 operacion: operacion OP_RESTA . termino

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    termino  ir al estado 95
    factor   ir al estado 61


estado 75

   30 termino: termino OP_MUL . factor

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    factor  ir al estado 96


estado 76

   31 termino: termino OP_DIV . factor

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    factor  ir al estado 97


estado 77

   42 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 42 (condicion)


estado 78

   44 op_comparacion: OP_MENOR .

    $default  reduce usando la regla 44 (op_comparacion)


estado 79

   45 op_comparacion: OP_MENORIGUAL .

    $default  reduce usando la regla 45 (op_comparacion)


estado 80

   46 op_comparacion: OP_MAYOR .

    $default  reduce usando la regla 46 (op_comparacion)


estado 81

   47 op_comparacion: OP_MAYORIGUAL .

    $default  reduce usando la regla 47 (op_comparacion)


estado 82

   48 op_comparacion: OP_DISTINTO .

    $default  reduce usando la regla 48 (op_comparacion)


estado 83

   49 op_comparacion: OP_IGUALDAD .

    $default  reduce usando la regla 49 (op_comparacion)


estado 84

   43 comparacion: factor op_comparacion . factor

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    factor  ir al estado 98


estado 85

   37 decision: IF P_A condicion P_C . LL_A bloque LL_C
   38         | IF P_A condicion P_C . LL_A bloque LL_C ELSE LL_A bloque LL_C

    LL_A  desplazar e ir al estado 99


estado 86

   40 condicion: comparacion OP_AND . comparacion

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    factor       ir al estado 64
    comparacion  ir al estado 100


estado 87

   41 condicion: comparacion OP_OR . comparacion

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    factor       ir al estado 64
    comparacion  ir al estado 101


estado 88

   50 repeticion: WHILE P_A condicion P_C . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 102


estado 89

   51 between: BETWEEN P_A ID COMA . COR_A operacion PUNTO_COMA operacion COR_C P_C

    COR_A  desplazar e ir al estado 103


estado 90

   54 lista_var: lista_var COMA ID .

    $default  reduce usando la regla 54 (lista_var)


estado 91

   53 tupla: P_A . lista_valores P_C

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    operacion      ir al estado 104
    termino        ir al estado 60
    factor         ir al estado 61
    lista_valores  ir al estado 105


estado 92

   52 asignacionlet: LET lista_var OP_IGUAL tupla .

    $default  reduce usando la regla 52 (asignacionlet)


estado 93

   36 factor: P_A operacion P_C .

    $default  reduce usando la regla 36 (factor)


estado 94

   27 operacion: operacion OP_SUMA termino .
   30 termino: termino . OP_MUL factor
   31        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 75
    OP_DIV  desplazar e ir al estado 76

    $default  reduce usando la regla 27 (operacion)


estado 95

   28 operacion: operacion OP_RESTA termino .
   30 termino: termino . OP_MUL factor
   31        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 75
    OP_DIV  desplazar e ir al estado 76

    $default  reduce usando la regla 28 (operacion)


estado 96

   30 termino: termino OP_MUL factor .

    $default  reduce usando la regla 30 (termino)


estado 97

   31 termino: termino OP_DIV factor .

    $default  reduce usando la regla 31 (termino)


estado 98

   43 comparacion: factor op_comparacion factor .

    $default  reduce usando la regla 43 (comparacion)


estado 99

   37 decision: IF P_A condicion P_C LL_A . bloque LL_C
   38         | IF P_A condicion P_C LL_A . bloque LL_C ELSE LL_A bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 106
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 100

   40 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 40 (condicion)


estado 101

   41 condicion: comparacion OP_OR comparacion .

    $default  reduce usando la regla 41 (condicion)


estado 102

   50 repeticion: WHILE P_A condicion P_C LL_A . bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 107
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 103

   51 between: BETWEEN P_A ID COMA COR_A . operacion PUNTO_COMA operacion COR_C P_C

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    operacion  ir al estado 108
    termino    ir al estado 60
    factor     ir al estado 61


estado 104

   27 operacion: operacion . OP_SUMA termino
   28          | operacion . OP_RESTA termino
   56 lista_valores: operacion .

    OP_SUMA   desplazar e ir al estado 73
    OP_RESTA  desplazar e ir al estado 74

    $default  reduce usando la regla 56 (lista_valores)


estado 105

   53 tupla: P_A lista_valores . P_C
   57 lista_valores: lista_valores . PUNTO_COMA operacion

    PUNTO_COMA  desplazar e ir al estado 109
    P_C         desplazar e ir al estado 110


estado 106

   15 bloque: bloque . sentencia
   37 decision: IF P_A condicion P_C LL_A bloque . LL_C
   38         | IF P_A condicion P_C LL_A bloque . LL_C ELSE LL_A bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 111
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 52
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 107

   15 bloque: bloque . sentencia
   50 repeticion: WHILE P_A condicion P_C LL_A bloque . LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 112
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 52
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 108

   27 operacion: operacion . OP_SUMA termino
   28          | operacion . OP_RESTA termino
   51 between: BETWEEN P_A ID COMA COR_A operacion . PUNTO_COMA operacion COR_C P_C

    PUNTO_COMA  desplazar e ir al estado 113
    OP_SUMA     desplazar e ir al estado 73
    OP_RESTA    desplazar e ir al estado 74


estado 109

   57 lista_valores: lista_valores PUNTO_COMA . operacion

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    operacion  ir al estado 114
    termino    ir al estado 60
    factor     ir al estado 61


estado 110

   53 tupla: P_A lista_valores P_C .

    $default  reduce usando la regla 53 (tupla)


estado 111

   37 decision: IF P_A condicion P_C LL_A bloque LL_C .
   38         | IF P_A condicion P_C LL_A bloque LL_C . ELSE LL_A bloque LL_C

    ELSE  desplazar e ir al estado 115

    $default  reduce usando la regla 37 (decision)


estado 112

   50 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C .

    $default  reduce usando la regla 50 (repeticion)


estado 113

   51 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA . operacion COR_C P_C

    ID         desplazar e ir al estado 62
    CONSTINT   desplazar e ir al estado 55
    CONSTREAL  desplazar e ir al estado 56
    P_A        desplazar e ir al estado 58

    operacion  ir al estado 116
    termino    ir al estado 60
    factor     ir al estado 61


estado 114

   27 operacion: operacion . OP_SUMA termino
   28          | operacion . OP_RESTA termino
   57 lista_valores: lista_valores PUNTO_COMA operacion .

    OP_SUMA   desplazar e ir al estado 73
    OP_RESTA  desplazar e ir al estado 74

    $default  reduce usando la regla 57 (lista_valores)


estado 115

   38 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 117


estado 116

   27 operacion: operacion . OP_SUMA termino
   28          | operacion . OP_RESTA termino
   51 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion . COR_C P_C

    OP_SUMA   desplazar e ir al estado 73
    OP_RESTA  desplazar e ir al estado 74
    COR_C     desplazar e ir al estado 118


estado 117

   38 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A . bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    bloque         ir al estado 119
    sentencia      ir al estado 29
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 118

   51 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C . P_C

    P_C  desplazar e ir al estado 120


estado 119

   15 bloque: bloque . sentencia
   38 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque . LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 121
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25
    GET         desplazar e ir al estado 26
    DISPLAY     desplazar e ir al estado 27

    sentencia      ir al estado 52
    asignacion     ir al estado 30
    decision       ir al estado 31
    repeticion     ir al estado 32
    between        ir al estado 33
    asignacionlet  ir al estado 34
    comentarios    ir al estado 35
    ingreso        ir al estado 36
    egreso         ir al estado 37


estado 120

   51 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C .

    $default  reduce usando la regla 51 (between)


estado 121

   38 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C .

    $default  reduce usando la regla 38 (decision)
