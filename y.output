Terminals unused in grammar

   PALABRA
   COMILLA
   ESPACIO
   TABULACION
   CARACTERES_ESPECIALES


Estado 14 conflictos: 6 desplazamiento(s)/reducción(ones)
Estado 26 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 46 conflictos: 8 reducción(ones)/reducción(ones)
Estado 85 conflictos: 6 desplazamiento(s)/reducción(ones)
Estado 88 conflictos: 6 desplazamiento(s)/reducción(ones)
Estado 92 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 93 conflictos: 7 desplazamiento(s)/reducción(ones)
Estado 103 conflictos: 6 desplazamiento(s)/reducción(ones)
Estado 105 conflictos: 7 desplazamiento(s)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: $@1 declaracion algoritmo

    3 $@2: /* vacío */

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF

    5 declaraciones_variables: declaraciones_variables declaracion_variable
    6                        | declaracion_variable

    7 declaracion_variable: ENTERO DOS_PUNTOS variables
    8                     | REAL DOS_PUNTOS variables
    9                     | STRING DOS_PUNTOS variables

   10 variables: ID
   11          | ID PUNTO_COMA variables

   12 $@3: /* vacío */

   13 algoritmo: $@3 INICIO bloque FIN

   14 bloque: sentencia
   15       | bloque sentencia

   16 sentencia: asignacion
   17          | decision
   18          | repeticion
   19          | between
   20          | asignacionlet
   21          | COMENTARIO

   22 asignacion: ID OP_ASIG ID
   23           | ID OP_ASIG operacion
   24           | ID OP_ASIG CONSTSTRING
   25           | /* vacío */

   26 operacion: operacion OP_SUMA termino
   27          | operacion OP_RESTA termino
   28          | termino

   29 termino: termino OP_MUL factor
   30        | termino OP_DIV factor
   31        | factor

   32 factor: ID
   33       | CONSTINT
   34       | CONSTREAL
   35       | P_A operacion P_C

   36 decision: IF P_A condicion P_C LL_A bloque LL_C
   37         | IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

   38 condicion: comparacion
   39          | comparacion OP_AND comparacion
   40          | comparacion OP_OR comparacion
   41          | OP_NOT comparacion

   42 comparacion: factor OP_COMPARACION factor

   43 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C

   44 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

   45 asignacionlet: LET lista_var OP_IGUAL tupla

   46 tupla: P_A lista_valores P_C

   47 lista_var: ID
   48          | ID COMA lista_var

   49 lista_valores: operacion
   50              | operacion PUNTO_COMA lista_valores


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 10 11 22 23 24 32 44 47 48
CONSTINT (259) 33
CONSTREAL (260) 34
CONSTSTRING (261) 24
ENTERO (262) 7
STRING (263) 9
REAL (264) 8
PUNTO_COMA (265) 11 44 50
COMA (266) 44 48
DOS_PUNTOS (267) 7 8 9
ENDEF (268) 4
DEFVAR (269) 4
PALABRA (270)
COMILLA (271)
ESPACIO (272)
TABULACION (273)
CARACTERES_ESPECIALES (274)
COMENTARIO (275) 21
OP_ASIG (276) 22 23 24
INICIO (277) 13
FIN (278) 13
P_A (279) 35 36 37 43 44 46
P_C (280) 35 36 37 43 44 46
OP_SUMA (281) 26
OP_RESTA (282) 27
OP_MUL (283) 29
OP_DIV (284) 30
IF (285) 36 37
ELSE (286) 37
LL_A (287) 36 37 43
LL_C (288) 36 37 43
OP_COMPARACION (289) 42
OP_AND (290) 39
OP_OR (291) 40
OP_NOT (292) 41
WHILE (293) 43
BETWEEN (294) 44
COR_A (295) 44
COR_C (296) 44
LET (297) 45
OP_IGUAL (298) 45


No terminales con las reglas donde aparecen

$accept (44)
    en la izquierda: 0
programa (45)
    en la izquierda: 2, en la derecha: 0
$@1 (46)
    en la izquierda: 1, en la derecha: 2
declaracion (47)
    en la izquierda: 4, en la derecha: 2
$@2 (48)
    en la izquierda: 3, en la derecha: 4
declaraciones_variables (49)
    en la izquierda: 5 6, en la derecha: 4 5
declaracion_variable (50)
    en la izquierda: 7 8 9, en la derecha: 5 6
variables (51)
    en la izquierda: 10 11, en la derecha: 7 8 9 11
algoritmo (52)
    en la izquierda: 13, en la derecha: 2
$@3 (53)
    en la izquierda: 12, en la derecha: 13
bloque (54)
    en la izquierda: 14 15, en la derecha: 13 15 36 37 43
sentencia (55)
    en la izquierda: 16 17 18 19 20 21, en la derecha: 14 15
asignacion (56)
    en la izquierda: 22 23 24 25, en la derecha: 16
operacion (57)
    en la izquierda: 26 27 28, en la derecha: 23 26 27 35 44 49 50
termino (58)
    en la izquierda: 29 30 31, en la derecha: 26 27 28 29 30
factor (59)
    en la izquierda: 32 33 34 35, en la derecha: 29 30 31 42
decision (60)
    en la izquierda: 36 37, en la derecha: 17
condicion (61)
    en la izquierda: 38 39 40 41, en la derecha: 36 37 43
comparacion (62)
    en la izquierda: 42, en la derecha: 38 39 40 41
repeticion (63)
    en la izquierda: 43, en la derecha: 18
between (64)
    en la izquierda: 44, en la derecha: 19
asignacionlet (65)
    en la izquierda: 45, en la derecha: 20
tupla (66)
    en la izquierda: 46, en la derecha: 45
lista_var (67)
    en la izquierda: 47 48, en la derecha: 45 48
lista_valores (68)
    en la izquierda: 49 50, en la derecha: 46 50


estado 0

    0 $accept: . programa $end

    $default  reduce usando la regla 1 ($@1)

    programa  ir al estado 1
    $@1       ir al estado 2


estado 1

    0 $accept: programa . $end

    $end  desplazar e ir al estado 3


estado 2

    2 programa: $@1 . declaracion algoritmo

    DEFVAR  desplazar e ir al estado 4

    declaracion  ir al estado 5


estado 3

    0 $accept: programa $end .

    $default  aceptar


estado 4

    4 declaracion: DEFVAR . $@2 declaraciones_variables ENDEF

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 6


estado 5

    2 programa: $@1 declaracion . algoritmo

    $default  reduce usando la regla 12 ($@3)

    algoritmo  ir al estado 7
    $@3        ir al estado 8


estado 6

    4 declaracion: DEFVAR $@2 . declaraciones_variables ENDEF

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11

    declaraciones_variables  ir al estado 12
    declaracion_variable     ir al estado 13


estado 7

    2 programa: $@1 declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 8

   13 algoritmo: $@3 . INICIO bloque FIN

    INICIO  desplazar e ir al estado 14


estado 9

    7 declaracion_variable: ENTERO . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 15


estado 10

    9 declaracion_variable: STRING . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 16


estado 11

    8 declaracion_variable: REAL . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 17


estado 12

    4 declaracion: DEFVAR $@2 declaraciones_variables . ENDEF
    5 declaraciones_variables: declaraciones_variables . declaracion_variable

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11
    ENDEF   desplazar e ir al estado 18

    declaracion_variable  ir al estado 19


estado 13

    6 declaraciones_variables: declaracion_variable .

    $default  reduce usando la regla 6 (declaraciones_variables)


estado 14

   13 algoritmo: $@3 INICIO . bloque FIN

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]
    $default    reduce usando la regla 25 (asignacion)

    bloque         ir al estado 26
    sentencia      ir al estado 27
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 15

    7 declaracion_variable: ENTERO DOS_PUNTOS . variables

    ID  desplazar e ir al estado 33

    variables  ir al estado 34


estado 16

    9 declaracion_variable: STRING DOS_PUNTOS . variables

    ID  desplazar e ir al estado 33

    variables  ir al estado 35


estado 17

    8 declaracion_variable: REAL DOS_PUNTOS . variables

    ID  desplazar e ir al estado 33

    variables  ir al estado 36


estado 18

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF .

    $default  reduce usando la regla 4 (declaracion)


estado 19

    5 declaraciones_variables: declaraciones_variables declaracion_variable .

    $default  reduce usando la regla 5 (declaraciones_variables)


estado 20

   22 asignacion: ID . OP_ASIG ID
   23           | ID . OP_ASIG operacion
   24           | ID . OP_ASIG CONSTSTRING

    OP_ASIG  desplazar e ir al estado 37


estado 21

   21 sentencia: COMENTARIO .

    $default  reduce usando la regla 21 (sentencia)


estado 22

   36 decision: IF . P_A condicion P_C LL_A bloque LL_C
   37         | IF . P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_A  desplazar e ir al estado 38


estado 23

   43 repeticion: WHILE . P_A condicion P_C LL_A bloque LL_C

    P_A  desplazar e ir al estado 39


estado 24

   44 between: BETWEEN . P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    P_A  desplazar e ir al estado 40


estado 25

   45 asignacionlet: LET . lista_var OP_IGUAL tupla

    ID  desplazar e ir al estado 41

    lista_var  ir al estado 42


estado 26

   13 algoritmo: $@3 INICIO bloque . FIN
   15 bloque: bloque . sentencia

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    FIN         desplazar e ir al estado 43
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    FIN         [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]

    sentencia      ir al estado 44
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 27

   14 bloque: sentencia .

    $default  reduce usando la regla 14 (bloque)


estado 28

   16 sentencia: asignacion .

    $default  reduce usando la regla 16 (sentencia)


estado 29

   17 sentencia: decision .

    $default  reduce usando la regla 17 (sentencia)


estado 30

   18 sentencia: repeticion .

    $default  reduce usando la regla 18 (sentencia)


estado 31

   19 sentencia: between .

    $default  reduce usando la regla 19 (sentencia)


estado 32

   20 sentencia: asignacionlet .

    $default  reduce usando la regla 20 (sentencia)


estado 33

   10 variables: ID .
   11          | ID . PUNTO_COMA variables

    PUNTO_COMA  desplazar e ir al estado 45

    $default  reduce usando la regla 10 (variables)


estado 34

    7 declaracion_variable: ENTERO DOS_PUNTOS variables .

    $default  reduce usando la regla 7 (declaracion_variable)


estado 35

    9 declaracion_variable: STRING DOS_PUNTOS variables .

    $default  reduce usando la regla 9 (declaracion_variable)


estado 36

    8 declaracion_variable: REAL DOS_PUNTOS variables .

    $default  reduce usando la regla 8 (declaracion_variable)


estado 37

   22 asignacion: ID OP_ASIG . ID
   23           | ID OP_ASIG . operacion
   24           | ID OP_ASIG . CONSTSTRING

    ID           desplazar e ir al estado 46
    CONSTINT     desplazar e ir al estado 47
    CONSTREAL    desplazar e ir al estado 48
    CONSTSTRING  desplazar e ir al estado 49
    P_A          desplazar e ir al estado 50

    operacion  ir al estado 51
    termino    ir al estado 52
    factor     ir al estado 53


estado 38

   36 decision: IF P_A . condicion P_C LL_A bloque LL_C
   37         | IF P_A . condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50
    OP_NOT     desplazar e ir al estado 55

    factor       ir al estado 56
    condicion    ir al estado 57
    comparacion  ir al estado 58


estado 39

   43 repeticion: WHILE P_A . condicion P_C LL_A bloque LL_C

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50
    OP_NOT     desplazar e ir al estado 55

    factor       ir al estado 56
    condicion    ir al estado 59
    comparacion  ir al estado 58


estado 40

   44 between: BETWEEN P_A . ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    ID  desplazar e ir al estado 60


estado 41

   47 lista_var: ID .
   48          | ID . COMA lista_var

    COMA  desplazar e ir al estado 61

    $default  reduce usando la regla 47 (lista_var)


estado 42

   45 asignacionlet: LET lista_var . OP_IGUAL tupla

    OP_IGUAL  desplazar e ir al estado 62


estado 43

   13 algoritmo: $@3 INICIO bloque FIN .

    $default  reduce usando la regla 13 (algoritmo)


estado 44

   15 bloque: bloque sentencia .

    $default  reduce usando la regla 15 (bloque)


estado 45

   11 variables: ID PUNTO_COMA . variables

    ID  desplazar e ir al estado 33

    variables  ir al estado 63


estado 46

   22 asignacion: ID OP_ASIG ID .
   32 factor: ID .

    ID          reduce usando la regla 22 (asignacion)
    ID          [reduce usando la regla 32 (factor)]
    COMENTARIO  reduce usando la regla 22 (asignacion)
    COMENTARIO  [reduce usando la regla 32 (factor)]
    FIN         reduce usando la regla 22 (asignacion)
    FIN         [reduce usando la regla 32 (factor)]
    OP_SUMA     reduce usando la regla 32 (factor)
    OP_RESTA    reduce usando la regla 32 (factor)
    OP_MUL      reduce usando la regla 32 (factor)
    OP_DIV      reduce usando la regla 32 (factor)
    IF          reduce usando la regla 22 (asignacion)
    IF          [reduce usando la regla 32 (factor)]
    LL_C        reduce usando la regla 22 (asignacion)
    LL_C        [reduce usando la regla 32 (factor)]
    WHILE       reduce usando la regla 22 (asignacion)
    WHILE       [reduce usando la regla 32 (factor)]
    BETWEEN     reduce usando la regla 22 (asignacion)
    BETWEEN     [reduce usando la regla 32 (factor)]
    LET         reduce usando la regla 22 (asignacion)
    LET         [reduce usando la regla 32 (factor)]
    $default    reduce usando la regla 22 (asignacion)


estado 47

   33 factor: CONSTINT .

    $default  reduce usando la regla 33 (factor)


estado 48

   34 factor: CONSTREAL .

    $default  reduce usando la regla 34 (factor)


estado 49

   24 asignacion: ID OP_ASIG CONSTSTRING .

    $default  reduce usando la regla 24 (asignacion)


estado 50

   35 factor: P_A . operacion P_C

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    operacion  ir al estado 64
    termino    ir al estado 52
    factor     ir al estado 53


estado 51

   23 asignacion: ID OP_ASIG operacion .
   26 operacion: operacion . OP_SUMA termino
   27          | operacion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66

    $default  reduce usando la regla 23 (asignacion)


estado 52

   28 operacion: termino .
   29 termino: termino . OP_MUL factor
   30        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 67
    OP_DIV  desplazar e ir al estado 68

    $default  reduce usando la regla 28 (operacion)


estado 53

   31 termino: factor .

    $default  reduce usando la regla 31 (termino)


estado 54

   32 factor: ID .

    $default  reduce usando la regla 32 (factor)


estado 55

   41 condicion: OP_NOT . comparacion

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    factor       ir al estado 56
    comparacion  ir al estado 69


estado 56

   42 comparacion: factor . OP_COMPARACION factor

    OP_COMPARACION  desplazar e ir al estado 70


estado 57

   36 decision: IF P_A condicion . P_C LL_A bloque LL_C
   37         | IF P_A condicion . P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_C  desplazar e ir al estado 71


estado 58

   38 condicion: comparacion .
   39          | comparacion . OP_AND comparacion
   40          | comparacion . OP_OR comparacion

    OP_AND  desplazar e ir al estado 72
    OP_OR   desplazar e ir al estado 73

    $default  reduce usando la regla 38 (condicion)


estado 59

   43 repeticion: WHILE P_A condicion . P_C LL_A bloque LL_C

    P_C  desplazar e ir al estado 74


estado 60

   44 between: BETWEEN P_A ID . COMA COR_A operacion PUNTO_COMA operacion COR_C P_C

    COMA  desplazar e ir al estado 75


estado 61

   48 lista_var: ID COMA . lista_var

    ID  desplazar e ir al estado 41

    lista_var  ir al estado 76


estado 62

   45 asignacionlet: LET lista_var OP_IGUAL . tupla

    P_A  desplazar e ir al estado 77

    tupla  ir al estado 78


estado 63

   11 variables: ID PUNTO_COMA variables .

    $default  reduce usando la regla 11 (variables)


estado 64

   26 operacion: operacion . OP_SUMA termino
   27          | operacion . OP_RESTA termino
   35 factor: P_A operacion . P_C

    P_C       desplazar e ir al estado 79
    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66


estado 65

   26 operacion: operacion OP_SUMA . termino

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    termino  ir al estado 80
    factor   ir al estado 53


estado 66

   27 operacion: operacion OP_RESTA . termino

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    termino  ir al estado 81
    factor   ir al estado 53


estado 67

   29 termino: termino OP_MUL . factor

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    factor  ir al estado 82


estado 68

   30 termino: termino OP_DIV . factor

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    factor  ir al estado 83


estado 69

   41 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 41 (condicion)


estado 70

   42 comparacion: factor OP_COMPARACION . factor

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    factor  ir al estado 84


estado 71

   36 decision: IF P_A condicion P_C . LL_A bloque LL_C
   37         | IF P_A condicion P_C . LL_A bloque LL_C ELSE LL_A bloque LL_C

    LL_A  desplazar e ir al estado 85


estado 72

   39 condicion: comparacion OP_AND . comparacion

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    factor       ir al estado 56
    comparacion  ir al estado 86


estado 73

   40 condicion: comparacion OP_OR . comparacion

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    factor       ir al estado 56
    comparacion  ir al estado 87


estado 74

   43 repeticion: WHILE P_A condicion P_C . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 88


estado 75

   44 between: BETWEEN P_A ID COMA . COR_A operacion PUNTO_COMA operacion COR_C P_C

    COR_A  desplazar e ir al estado 89


estado 76

   48 lista_var: ID COMA lista_var .

    $default  reduce usando la regla 48 (lista_var)


estado 77

   46 tupla: P_A . lista_valores P_C

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    operacion      ir al estado 90
    termino        ir al estado 52
    factor         ir al estado 53
    lista_valores  ir al estado 91


estado 78

   45 asignacionlet: LET lista_var OP_IGUAL tupla .

    $default  reduce usando la regla 45 (asignacionlet)


estado 79

   35 factor: P_A operacion P_C .

    $default  reduce usando la regla 35 (factor)


estado 80

   26 operacion: operacion OP_SUMA termino .
   29 termino: termino . OP_MUL factor
   30        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 67
    OP_DIV  desplazar e ir al estado 68

    $default  reduce usando la regla 26 (operacion)


estado 81

   27 operacion: operacion OP_RESTA termino .
   29 termino: termino . OP_MUL factor
   30        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 67
    OP_DIV  desplazar e ir al estado 68

    $default  reduce usando la regla 27 (operacion)


estado 82

   29 termino: termino OP_MUL factor .

    $default  reduce usando la regla 29 (termino)


estado 83

   30 termino: termino OP_DIV factor .

    $default  reduce usando la regla 30 (termino)


estado 84

   42 comparacion: factor OP_COMPARACION factor .

    $default  reduce usando la regla 42 (comparacion)


estado 85

   36 decision: IF P_A condicion P_C LL_A . bloque LL_C
   37         | IF P_A condicion P_C LL_A . bloque LL_C ELSE LL_A bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]
    $default    reduce usando la regla 25 (asignacion)

    bloque         ir al estado 92
    sentencia      ir al estado 27
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 86

   39 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 39 (condicion)


estado 87

   40 condicion: comparacion OP_OR comparacion .

    $default  reduce usando la regla 40 (condicion)


estado 88

   43 repeticion: WHILE P_A condicion P_C LL_A . bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]
    $default    reduce usando la regla 25 (asignacion)

    bloque         ir al estado 93
    sentencia      ir al estado 27
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 89

   44 between: BETWEEN P_A ID COMA COR_A . operacion PUNTO_COMA operacion COR_C P_C

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    operacion  ir al estado 94
    termino    ir al estado 52
    factor     ir al estado 53


estado 90

   26 operacion: operacion . OP_SUMA termino
   27          | operacion . OP_RESTA termino
   49 lista_valores: operacion .
   50              | operacion . PUNTO_COMA lista_valores

    PUNTO_COMA  desplazar e ir al estado 95
    OP_SUMA     desplazar e ir al estado 65
    OP_RESTA    desplazar e ir al estado 66

    $default  reduce usando la regla 49 (lista_valores)


estado 91

   46 tupla: P_A lista_valores . P_C

    P_C  desplazar e ir al estado 96


estado 92

   15 bloque: bloque . sentencia
   36 decision: IF P_A condicion P_C LL_A bloque . LL_C
   37         | IF P_A condicion P_C LL_A bloque . LL_C ELSE LL_A bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 97
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    LL_C        [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]

    sentencia      ir al estado 44
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 93

   15 bloque: bloque . sentencia
   43 repeticion: WHILE P_A condicion P_C LL_A bloque . LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 98
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    LL_C        [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]

    sentencia      ir al estado 44
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 94

   26 operacion: operacion . OP_SUMA termino
   27          | operacion . OP_RESTA termino
   44 between: BETWEEN P_A ID COMA COR_A operacion . PUNTO_COMA operacion COR_C P_C

    PUNTO_COMA  desplazar e ir al estado 99
    OP_SUMA     desplazar e ir al estado 65
    OP_RESTA    desplazar e ir al estado 66


estado 95

   50 lista_valores: operacion PUNTO_COMA . lista_valores

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    operacion      ir al estado 90
    termino        ir al estado 52
    factor         ir al estado 53
    lista_valores  ir al estado 100


estado 96

   46 tupla: P_A lista_valores P_C .

    $default  reduce usando la regla 46 (tupla)


estado 97

   36 decision: IF P_A condicion P_C LL_A bloque LL_C .
   37         | IF P_A condicion P_C LL_A bloque LL_C . ELSE LL_A bloque LL_C

    ELSE  desplazar e ir al estado 101

    $default  reduce usando la regla 36 (decision)


estado 98

   43 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C .

    $default  reduce usando la regla 43 (repeticion)


estado 99

   44 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA . operacion COR_C P_C

    ID         desplazar e ir al estado 54
    CONSTINT   desplazar e ir al estado 47
    CONSTREAL  desplazar e ir al estado 48
    P_A        desplazar e ir al estado 50

    operacion  ir al estado 102
    termino    ir al estado 52
    factor     ir al estado 53


estado 100

   50 lista_valores: operacion PUNTO_COMA lista_valores .

    $default  reduce usando la regla 50 (lista_valores)


estado 101

   37 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 103


estado 102

   26 operacion: operacion . OP_SUMA termino
   27          | operacion . OP_RESTA termino
   44 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion . COR_C P_C

    OP_SUMA   desplazar e ir al estado 65
    OP_RESTA  desplazar e ir al estado 66
    COR_C     desplazar e ir al estado 104


estado 103

   37 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A . bloque LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]
    $default    reduce usando la regla 25 (asignacion)

    bloque         ir al estado 105
    sentencia      ir al estado 27
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 104

   44 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C . P_C

    P_C  desplazar e ir al estado 106


estado 105

   15 bloque: bloque . sentencia
   37 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque . LL_C

    ID          desplazar e ir al estado 20
    COMENTARIO  desplazar e ir al estado 21
    IF          desplazar e ir al estado 22
    LL_C        desplazar e ir al estado 107
    WHILE       desplazar e ir al estado 23
    BETWEEN     desplazar e ir al estado 24
    LET         desplazar e ir al estado 25

    ID          [reduce usando la regla 25 (asignacion)]
    COMENTARIO  [reduce usando la regla 25 (asignacion)]
    IF          [reduce usando la regla 25 (asignacion)]
    LL_C        [reduce usando la regla 25 (asignacion)]
    WHILE       [reduce usando la regla 25 (asignacion)]
    BETWEEN     [reduce usando la regla 25 (asignacion)]
    LET         [reduce usando la regla 25 (asignacion)]

    sentencia      ir al estado 44
    asignacion     ir al estado 28
    decision       ir al estado 29
    repeticion     ir al estado 30
    between        ir al estado 31
    asignacionlet  ir al estado 32


estado 106

   44 between: BETWEEN P_A ID COMA COR_A operacion PUNTO_COMA operacion COR_C P_C .

    $default  reduce usando la regla 44 (between)


estado 107

   37 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C .

    $default  reduce usando la regla 37 (decision)
