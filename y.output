Terminals unused in grammar

   ERROR
   TEXTO


Estado 38 conflictos: 5 reducción(ones)/reducción(ones)
Estado 41 conflictos: 5 reducción(ones)/reducción(ones)


Gramática

    0 $accept: programa $end

    1 $@1: /* vacío */

    2 programa: $@1 declaracion algoritmo

    3 $@2: /* vacío */

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF

    5 declaraciones_variables: declaraciones_variables declaracion_variable
    6                        | declaracion_variable

    7 declaracion_variable: ENTERO DOS_PUNTOS variables
    8                     | REAL DOS_PUNTOS variables
    9                     | STRING DOS_PUNTOS variables

   10 variables: ID
   11          | ID PUNTO_COMA variables

   12 $@3: /* vacío */

   13 algoritmo: $@3 INICIO bloque FIN

   14 bloque: sentencia
   15       | bloque sentencia

   16 sentencia: asignacion
   17          | decision
   18          | repeticion

   19 asignacion: ID OP_ASIG ID
   20           | ID OP_ASIG operacion
   21           | ID OP_ASIG IF P_A condicion COMA operacion COMA operacion P_C
   22           | ID OP_ASIG CONSTSTRING

   23 operacion: operacion OP_SUMA termino
   24          | operacion OP_RESTA termino
   25          | termino

   26 termino: termino OP_MUL factor
   27        | termino OP_DIV factor
   28        | factor

   29 factor: ID
   30       | CONSTINT
   31       | CONSTREAL
   32       | CONSTSTRING
   33       | P_A operacion P_C

   34 decision: IF P_A condicion P_C LL_A bloque LL_C
   35         | IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

   36 condicion: comparacion
   37          | comparacion OP_AND comparacion
   38          | comparacion OP_OR comparacion
   39          | OP_NOT comparacion

   40 comparacion: factor OP_COMPARACION factor

   41 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
ID (258) 10 11 19 20 21 22 29
ENTERO (259) 7
STRING (260) 9
REAL (261) 8
PUNTO_COMA (262) 11
COMA (263) 21
DOS_PUNTOS (264) 7 8 9
ENDEF (265) 4
DEFVAR (266) 4
CONSTINT (267) 30
CONSTREAL (268) 31
CONSTSTRING (269) 22 32
OP_ASIG (270) 19 20 21 22
ERROR (271)
TEXTO (272)
INICIO (273) 13
FIN (274) 13
P_A (275) 21 33 34 35 41
P_C (276) 21 33 34 35 41
OP_SUMA (277) 23
OP_RESTA (278) 24
OP_MUL (279) 26
OP_DIV (280) 27
IF (281) 21 34 35
ELSE (282) 35
LL_A (283) 34 35 41
LL_C (284) 34 35 41
OP_COMPARACION (285) 40
OP_AND (286) 37
OP_OR (287) 38
OP_NOT (288) 39
WHILE (289) 41


No terminales con las reglas donde aparecen

$accept (35)
    en la izquierda: 0
programa (36)
    en la izquierda: 2, en la derecha: 0
$@1 (37)
    en la izquierda: 1, en la derecha: 2
declaracion (38)
    en la izquierda: 4, en la derecha: 2
$@2 (39)
    en la izquierda: 3, en la derecha: 4
declaraciones_variables (40)
    en la izquierda: 5 6, en la derecha: 4 5
declaracion_variable (41)
    en la izquierda: 7 8 9, en la derecha: 5 6
variables (42)
    en la izquierda: 10 11, en la derecha: 7 8 9 11
algoritmo (43)
    en la izquierda: 13, en la derecha: 2
$@3 (44)
    en la izquierda: 12, en la derecha: 13
bloque (45)
    en la izquierda: 14 15, en la derecha: 13 15 34 35 41
sentencia (46)
    en la izquierda: 16 17 18, en la derecha: 14 15
asignacion (47)
    en la izquierda: 19 20 21 22, en la derecha: 16
operacion (48)
    en la izquierda: 23 24 25, en la derecha: 20 21 23 24 33
termino (49)
    en la izquierda: 26 27 28, en la derecha: 23 24 25 26 27
factor (50)
    en la izquierda: 29 30 31 32 33, en la derecha: 26 27 28 40
decision (51)
    en la izquierda: 34 35, en la derecha: 17
condicion (52)
    en la izquierda: 36 37 38 39, en la derecha: 21 34 35 41
comparacion (53)
    en la izquierda: 40, en la derecha: 36 37 38 39
repeticion (54)
    en la izquierda: 41, en la derecha: 18


estado 0

    0 $accept: . programa $end

    $default  reduce usando la regla 1 ($@1)

    programa  ir al estado 1
    $@1       ir al estado 2


estado 1

    0 $accept: programa . $end

    $end  desplazar e ir al estado 3


estado 2

    2 programa: $@1 . declaracion algoritmo

    DEFVAR  desplazar e ir al estado 4

    declaracion  ir al estado 5


estado 3

    0 $accept: programa $end .

    $default  aceptar


estado 4

    4 declaracion: DEFVAR . $@2 declaraciones_variables ENDEF

    $default  reduce usando la regla 3 ($@2)

    $@2  ir al estado 6


estado 5

    2 programa: $@1 declaracion . algoritmo

    $default  reduce usando la regla 12 ($@3)

    algoritmo  ir al estado 7
    $@3        ir al estado 8


estado 6

    4 declaracion: DEFVAR $@2 . declaraciones_variables ENDEF

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11

    declaraciones_variables  ir al estado 12
    declaracion_variable     ir al estado 13


estado 7

    2 programa: $@1 declaracion algoritmo .

    $default  reduce usando la regla 2 (programa)


estado 8

   13 algoritmo: $@3 . INICIO bloque FIN

    INICIO  desplazar e ir al estado 14


estado 9

    7 declaracion_variable: ENTERO . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 15


estado 10

    9 declaracion_variable: STRING . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 16


estado 11

    8 declaracion_variable: REAL . DOS_PUNTOS variables

    DOS_PUNTOS  desplazar e ir al estado 17


estado 12

    4 declaracion: DEFVAR $@2 declaraciones_variables . ENDEF
    5 declaraciones_variables: declaraciones_variables . declaracion_variable

    ENTERO  desplazar e ir al estado 9
    STRING  desplazar e ir al estado 10
    REAL    desplazar e ir al estado 11
    ENDEF   desplazar e ir al estado 18

    declaracion_variable  ir al estado 19


estado 13

    6 declaraciones_variables: declaracion_variable .

    $default  reduce usando la regla 6 (declaraciones_variables)


estado 14

   13 algoritmo: $@3 INICIO . bloque FIN

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    WHILE  desplazar e ir al estado 22

    bloque      ir al estado 23
    sentencia   ir al estado 24
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 15

    7 declaracion_variable: ENTERO DOS_PUNTOS . variables

    ID  desplazar e ir al estado 28

    variables  ir al estado 29


estado 16

    9 declaracion_variable: STRING DOS_PUNTOS . variables

    ID  desplazar e ir al estado 28

    variables  ir al estado 30


estado 17

    8 declaracion_variable: REAL DOS_PUNTOS . variables

    ID  desplazar e ir al estado 28

    variables  ir al estado 31


estado 18

    4 declaracion: DEFVAR $@2 declaraciones_variables ENDEF .

    $default  reduce usando la regla 4 (declaracion)


estado 19

    5 declaraciones_variables: declaraciones_variables declaracion_variable .

    $default  reduce usando la regla 5 (declaraciones_variables)


estado 20

   19 asignacion: ID . OP_ASIG ID
   20           | ID . OP_ASIG operacion
   21           | ID . OP_ASIG IF P_A condicion COMA operacion COMA operacion P_C
   22           | ID . OP_ASIG CONSTSTRING

    OP_ASIG  desplazar e ir al estado 32


estado 21

   34 decision: IF . P_A condicion P_C LL_A bloque LL_C
   35         | IF . P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_A  desplazar e ir al estado 33


estado 22

   41 repeticion: WHILE . P_A condicion P_C LL_A bloque LL_C

    P_A  desplazar e ir al estado 34


estado 23

   13 algoritmo: $@3 INICIO bloque . FIN
   15 bloque: bloque . sentencia

    ID     desplazar e ir al estado 20
    FIN    desplazar e ir al estado 35
    IF     desplazar e ir al estado 21
    WHILE  desplazar e ir al estado 22

    sentencia   ir al estado 36
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 24

   14 bloque: sentencia .

    $default  reduce usando la regla 14 (bloque)


estado 25

   16 sentencia: asignacion .

    $default  reduce usando la regla 16 (sentencia)


estado 26

   17 sentencia: decision .

    $default  reduce usando la regla 17 (sentencia)


estado 27

   18 sentencia: repeticion .

    $default  reduce usando la regla 18 (sentencia)


estado 28

   10 variables: ID .
   11          | ID . PUNTO_COMA variables

    PUNTO_COMA  desplazar e ir al estado 37

    $default  reduce usando la regla 10 (variables)


estado 29

    7 declaracion_variable: ENTERO DOS_PUNTOS variables .

    $default  reduce usando la regla 7 (declaracion_variable)


estado 30

    9 declaracion_variable: STRING DOS_PUNTOS variables .

    $default  reduce usando la regla 9 (declaracion_variable)


estado 31

    8 declaracion_variable: REAL DOS_PUNTOS variables .

    $default  reduce usando la regla 8 (declaracion_variable)


estado 32

   19 asignacion: ID OP_ASIG . ID
   20           | ID OP_ASIG . operacion
   21           | ID OP_ASIG . IF P_A condicion COMA operacion COMA operacion P_C
   22           | ID OP_ASIG . CONSTSTRING

    ID           desplazar e ir al estado 38
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 41
    P_A          desplazar e ir al estado 42
    IF           desplazar e ir al estado 43

    operacion  ir al estado 44
    termino    ir al estado 45
    factor     ir al estado 46


estado 33

   34 decision: IF P_A . condicion P_C LL_A bloque LL_C
   35         | IF P_A . condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42
    OP_NOT       desplazar e ir al estado 49

    factor       ir al estado 50
    condicion    ir al estado 51
    comparacion  ir al estado 52


estado 34

   41 repeticion: WHILE P_A . condicion P_C LL_A bloque LL_C

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42
    OP_NOT       desplazar e ir al estado 49

    factor       ir al estado 50
    condicion    ir al estado 53
    comparacion  ir al estado 52


estado 35

   13 algoritmo: $@3 INICIO bloque FIN .

    $default  reduce usando la regla 13 (algoritmo)


estado 36

   15 bloque: bloque sentencia .

    $default  reduce usando la regla 15 (bloque)


estado 37

   11 variables: ID PUNTO_COMA . variables

    ID  desplazar e ir al estado 28

    variables  ir al estado 54


estado 38

   19 asignacion: ID OP_ASIG ID .
   29 factor: ID .

    ID        reduce usando la regla 19 (asignacion)
    ID        [reduce usando la regla 29 (factor)]
    FIN       reduce usando la regla 19 (asignacion)
    FIN       [reduce usando la regla 29 (factor)]
    OP_SUMA   reduce usando la regla 29 (factor)
    OP_RESTA  reduce usando la regla 29 (factor)
    OP_MUL    reduce usando la regla 29 (factor)
    OP_DIV    reduce usando la regla 29 (factor)
    IF        reduce usando la regla 19 (asignacion)
    IF        [reduce usando la regla 29 (factor)]
    LL_C      reduce usando la regla 19 (asignacion)
    LL_C      [reduce usando la regla 29 (factor)]
    WHILE     reduce usando la regla 19 (asignacion)
    WHILE     [reduce usando la regla 29 (factor)]
    $default  reduce usando la regla 19 (asignacion)


estado 39

   30 factor: CONSTINT .

    $default  reduce usando la regla 30 (factor)


estado 40

   31 factor: CONSTREAL .

    $default  reduce usando la regla 31 (factor)


estado 41

   22 asignacion: ID OP_ASIG CONSTSTRING .
   32 factor: CONSTSTRING .

    ID        reduce usando la regla 22 (asignacion)
    ID        [reduce usando la regla 32 (factor)]
    FIN       reduce usando la regla 22 (asignacion)
    FIN       [reduce usando la regla 32 (factor)]
    OP_SUMA   reduce usando la regla 32 (factor)
    OP_RESTA  reduce usando la regla 32 (factor)
    OP_MUL    reduce usando la regla 32 (factor)
    OP_DIV    reduce usando la regla 32 (factor)
    IF        reduce usando la regla 22 (asignacion)
    IF        [reduce usando la regla 32 (factor)]
    LL_C      reduce usando la regla 22 (asignacion)
    LL_C      [reduce usando la regla 32 (factor)]
    WHILE     reduce usando la regla 22 (asignacion)
    WHILE     [reduce usando la regla 32 (factor)]
    $default  reduce usando la regla 22 (asignacion)


estado 42

   33 factor: P_A . operacion P_C

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    operacion  ir al estado 55
    termino    ir al estado 45
    factor     ir al estado 46


estado 43

   21 asignacion: ID OP_ASIG IF . P_A condicion COMA operacion COMA operacion P_C

    P_A  desplazar e ir al estado 56


estado 44

   20 asignacion: ID OP_ASIG operacion .
   23 operacion: operacion . OP_SUMA termino
   24          | operacion . OP_RESTA termino

    OP_SUMA   desplazar e ir al estado 57
    OP_RESTA  desplazar e ir al estado 58

    $default  reduce usando la regla 20 (asignacion)


estado 45

   25 operacion: termino .
   26 termino: termino . OP_MUL factor
   27        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 59
    OP_DIV  desplazar e ir al estado 60

    $default  reduce usando la regla 25 (operacion)


estado 46

   28 termino: factor .

    $default  reduce usando la regla 28 (termino)


estado 47

   29 factor: ID .

    $default  reduce usando la regla 29 (factor)


estado 48

   32 factor: CONSTSTRING .

    $default  reduce usando la regla 32 (factor)


estado 49

   39 condicion: OP_NOT . comparacion

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    factor       ir al estado 50
    comparacion  ir al estado 61


estado 50

   40 comparacion: factor . OP_COMPARACION factor

    OP_COMPARACION  desplazar e ir al estado 62


estado 51

   34 decision: IF P_A condicion . P_C LL_A bloque LL_C
   35         | IF P_A condicion . P_C LL_A bloque LL_C ELSE LL_A bloque LL_C

    P_C  desplazar e ir al estado 63


estado 52

   36 condicion: comparacion .
   37          | comparacion . OP_AND comparacion
   38          | comparacion . OP_OR comparacion

    OP_AND  desplazar e ir al estado 64
    OP_OR   desplazar e ir al estado 65

    $default  reduce usando la regla 36 (condicion)


estado 53

   41 repeticion: WHILE P_A condicion . P_C LL_A bloque LL_C

    P_C  desplazar e ir al estado 66


estado 54

   11 variables: ID PUNTO_COMA variables .

    $default  reduce usando la regla 11 (variables)


estado 55

   23 operacion: operacion . OP_SUMA termino
   24          | operacion . OP_RESTA termino
   33 factor: P_A operacion . P_C

    P_C       desplazar e ir al estado 67
    OP_SUMA   desplazar e ir al estado 57
    OP_RESTA  desplazar e ir al estado 58


estado 56

   21 asignacion: ID OP_ASIG IF P_A . condicion COMA operacion COMA operacion P_C

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42
    OP_NOT       desplazar e ir al estado 49

    factor       ir al estado 50
    condicion    ir al estado 68
    comparacion  ir al estado 52


estado 57

   23 operacion: operacion OP_SUMA . termino

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    termino  ir al estado 69
    factor   ir al estado 46


estado 58

   24 operacion: operacion OP_RESTA . termino

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    termino  ir al estado 70
    factor   ir al estado 46


estado 59

   26 termino: termino OP_MUL . factor

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    factor  ir al estado 71


estado 60

   27 termino: termino OP_DIV . factor

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    factor  ir al estado 72


estado 61

   39 condicion: OP_NOT comparacion .

    $default  reduce usando la regla 39 (condicion)


estado 62

   40 comparacion: factor OP_COMPARACION . factor

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    factor  ir al estado 73


estado 63

   34 decision: IF P_A condicion P_C . LL_A bloque LL_C
   35         | IF P_A condicion P_C . LL_A bloque LL_C ELSE LL_A bloque LL_C

    LL_A  desplazar e ir al estado 74


estado 64

   37 condicion: comparacion OP_AND . comparacion

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    factor       ir al estado 50
    comparacion  ir al estado 75


estado 65

   38 condicion: comparacion OP_OR . comparacion

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    factor       ir al estado 50
    comparacion  ir al estado 76


estado 66

   41 repeticion: WHILE P_A condicion P_C . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 77


estado 67

   33 factor: P_A operacion P_C .

    $default  reduce usando la regla 33 (factor)


estado 68

   21 asignacion: ID OP_ASIG IF P_A condicion . COMA operacion COMA operacion P_C

    COMA  desplazar e ir al estado 78


estado 69

   23 operacion: operacion OP_SUMA termino .
   26 termino: termino . OP_MUL factor
   27        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 59
    OP_DIV  desplazar e ir al estado 60

    $default  reduce usando la regla 23 (operacion)


estado 70

   24 operacion: operacion OP_RESTA termino .
   26 termino: termino . OP_MUL factor
   27        | termino . OP_DIV factor

    OP_MUL  desplazar e ir al estado 59
    OP_DIV  desplazar e ir al estado 60

    $default  reduce usando la regla 24 (operacion)


estado 71

   26 termino: termino OP_MUL factor .

    $default  reduce usando la regla 26 (termino)


estado 72

   27 termino: termino OP_DIV factor .

    $default  reduce usando la regla 27 (termino)


estado 73

   40 comparacion: factor OP_COMPARACION factor .

    $default  reduce usando la regla 40 (comparacion)


estado 74

   34 decision: IF P_A condicion P_C LL_A . bloque LL_C
   35         | IF P_A condicion P_C LL_A . bloque LL_C ELSE LL_A bloque LL_C

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    WHILE  desplazar e ir al estado 22

    bloque      ir al estado 79
    sentencia   ir al estado 24
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 75

   37 condicion: comparacion OP_AND comparacion .

    $default  reduce usando la regla 37 (condicion)


estado 76

   38 condicion: comparacion OP_OR comparacion .

    $default  reduce usando la regla 38 (condicion)


estado 77

   41 repeticion: WHILE P_A condicion P_C LL_A . bloque LL_C

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    WHILE  desplazar e ir al estado 22

    bloque      ir al estado 80
    sentencia   ir al estado 24
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 78

   21 asignacion: ID OP_ASIG IF P_A condicion COMA . operacion COMA operacion P_C

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    operacion  ir al estado 81
    termino    ir al estado 45
    factor     ir al estado 46


estado 79

   15 bloque: bloque . sentencia
   34 decision: IF P_A condicion P_C LL_A bloque . LL_C
   35         | IF P_A condicion P_C LL_A bloque . LL_C ELSE LL_A bloque LL_C

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    LL_C   desplazar e ir al estado 82
    WHILE  desplazar e ir al estado 22

    sentencia   ir al estado 36
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 80

   15 bloque: bloque . sentencia
   41 repeticion: WHILE P_A condicion P_C LL_A bloque . LL_C

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    LL_C   desplazar e ir al estado 83
    WHILE  desplazar e ir al estado 22

    sentencia   ir al estado 36
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 81

   21 asignacion: ID OP_ASIG IF P_A condicion COMA operacion . COMA operacion P_C
   23 operacion: operacion . OP_SUMA termino
   24          | operacion . OP_RESTA termino

    COMA      desplazar e ir al estado 84
    OP_SUMA   desplazar e ir al estado 57
    OP_RESTA  desplazar e ir al estado 58


estado 82

   34 decision: IF P_A condicion P_C LL_A bloque LL_C .
   35         | IF P_A condicion P_C LL_A bloque LL_C . ELSE LL_A bloque LL_C

    ELSE  desplazar e ir al estado 85

    $default  reduce usando la regla 34 (decision)


estado 83

   41 repeticion: WHILE P_A condicion P_C LL_A bloque LL_C .

    $default  reduce usando la regla 41 (repeticion)


estado 84

   21 asignacion: ID OP_ASIG IF P_A condicion COMA operacion COMA . operacion P_C

    ID           desplazar e ir al estado 47
    CONSTINT     desplazar e ir al estado 39
    CONSTREAL    desplazar e ir al estado 40
    CONSTSTRING  desplazar e ir al estado 48
    P_A          desplazar e ir al estado 42

    operacion  ir al estado 86
    termino    ir al estado 45
    factor     ir al estado 46


estado 85

   35 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE . LL_A bloque LL_C

    LL_A  desplazar e ir al estado 87


estado 86

   21 asignacion: ID OP_ASIG IF P_A condicion COMA operacion COMA operacion . P_C
   23 operacion: operacion . OP_SUMA termino
   24          | operacion . OP_RESTA termino

    P_C       desplazar e ir al estado 88
    OP_SUMA   desplazar e ir al estado 57
    OP_RESTA  desplazar e ir al estado 58


estado 87

   35 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A . bloque LL_C

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    WHILE  desplazar e ir al estado 22

    bloque      ir al estado 89
    sentencia   ir al estado 24
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 88

   21 asignacion: ID OP_ASIG IF P_A condicion COMA operacion COMA operacion P_C .

    $default  reduce usando la regla 21 (asignacion)


estado 89

   15 bloque: bloque . sentencia
   35 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque . LL_C

    ID     desplazar e ir al estado 20
    IF     desplazar e ir al estado 21
    LL_C   desplazar e ir al estado 90
    WHILE  desplazar e ir al estado 22

    sentencia   ir al estado 36
    asignacion  ir al estado 25
    decision    ir al estado 26
    repeticion  ir al estado 27


estado 90

   35 decision: IF P_A condicion P_C LL_A bloque LL_C ELSE LL_A bloque LL_C .

    $default  reduce usando la regla 35 (decision)
